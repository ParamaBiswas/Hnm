#pragma checksum "E:\CenterPoint\CenterPointPortal\CenterPointUI\Views\Requisition\RFPDeclarationRequisition.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "ce5be225c963ef3092519467d1aa8d116606c64c"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Requisition_RFPDeclarationRequisition), @"mvc.1.0.view", @"/Views/Requisition/RFPDeclarationRequisition.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Requisition/RFPDeclarationRequisition.cshtml", typeof(AspNetCore.Views_Requisition_RFPDeclarationRequisition))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "E:\CenterPoint\CenterPointPortal\CenterPointUI\Views\_ViewImports.cshtml"
using CenterPointUI;

#line default
#line hidden
#line 2 "E:\CenterPoint\CenterPointPortal\CenterPointUI\Views\_ViewImports.cshtml"
using CenterPointUI.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ce5be225c963ef3092519467d1aa8d116606c64c", @"/Views/Requisition/RFPDeclarationRequisition.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"2edc7cc0f3e77f68ee09f57f8aa10aed8980b104", @"/Views/_ViewImports.cshtml")]
    public class Views_Requisition_RFPDeclarationRequisition : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "1", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "2", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "E:\CenterPoint\CenterPointPortal\CenterPointUI\Views\Requisition\RFPDeclarationRequisition.cshtml"
  
    ViewData["Title"] = "RFPDeclarationRequisition";

#line default
#line hidden
            BeginContext(63, 30079, true);
            WriteLiteral(@"

<script type=""text/javascript"">

    //Variables for Load Previous Requisition
    var tableName_TBL = """";
    var requisitionID = """";
    var requisitionType = """";
    var requisitionType_VW = """";
    var requisitionTitle = """";
    var requisitionFor = """";
    var requisitionFor_VW = """";
    var requisitionForType = """";
    var requisitionForTypeName_VW = """";
    var remarks = """";
    var requisitionDate = """";
    var reqProductCategory = """";
    var reqProductCategory_VW = """";
    var address = """"; 
    var isApproved = """";
    var penaltyClause = """";
    var requester = """";
    var requester_VW = """";
    var submissionDeadline = """";
    var warrantyToDate = """";
    var warrantyFromDate = """";
    var maturityTo = """";
    var maturityFrom = """";
    var requisitionCode_PK = """";
    var approvalAction = """";
    var priceLock = """";
    var priceLockName_VW = """";
    var employeeId_VW = """";

    var tableName_TBL = """";
    var productCode = """";
    var productID_VW = """";
    v");
            WriteLiteral(@"ar productName_VW = """";
    var requisitionDetCode_PK = """";
    var requisitionCode = """";
    var quantity = """";
    var productType = """";
    var qunatityMOUCode = """";
    var qunatityMOU_VW = """";





    var jList = [];
    var mainList = [];
    var myArray = [];
    var jObj = {};
    
    var jObjSelectedEmployee = {};
    var employeeListArray = [];
    var ConditionCode_PK;

    var conditionPositionInArray = 0;

    var arrayPurchaseRequisitionItemList_VW = [];
    var arrayPurchaseReqItemSpecificationList_VW = [];
    var arrayPurchaseRequisitionTermsList_VW = [];


    var mainArray = [];
    var jObj2 = {};

    var ConSLNo = 1;

    var table;
    var row;
    var specrow;
    var i = 0;
    var j = 1;
    var k = 0;
    var start = 0;
    var startProductDetails = 0;
    var included = """";
    var editTermsDescription = """";

    var vArray = new Array();
    var pTcType;
    var pTcValue;
    var pDescription;
    var pCertificateNumber;
    var pExpiry");
            WriteLiteral(@"Date;
    var pIssueDate;
    var pRemarks;
    var server = ""http://192.168.20.152"";
    var requestUrl;

    var pUserCode = """";
    var pCompanyCode = 1;

    window.onload = function () {
        CheckUserIsLogedIn();
    }

    function CheckUserIsLogedIn() {
        debugger
        GetCookie();

        if (pUserCode != ""NotLogedIn"") {
            prReferenceDropDownList();
            LoadSelectedPrReferenceData();
            getCurrentDate();
            employeeNameDropDownList();
            //LoadSelectedEmployeeData();

            //getRequisitionData();
            //LoadRequisitionData();
            //getCurrentDate();
            ////RequisitionTypeDropDown();
            //DepartmentDropDown();
            //ServiceTypeDropDown();
            //RequesterDropDown();
            //TcTypeDropDown();
            //categoryDropDownList();
            //unitDropDownList();
            //productNameDropDownList();
            //LoadItemCodeByDropDown();
       ");
            WriteLiteral(@" }
        else {
            requestUrl = server + ""/centerpoint/requisition/RFPDeclarationRequisition"";
            Cookies.set('RequestURL', requestUrl, { expires: 1 });
            window.location.href = ""../Login/LoginPageUI"";
        }
    }

    function GetCookie() {
        debugger
        pUserCode = Cookies.get('UserID');

        if (pUserCode == null || pUserCode == """") {
            // do cookie doesn't exist stuff;
            pUserCode = ""NotLogedIn"";
        }
        else {
            // do cookie exists stuff
            pUserCode = Cookies.get('UserID');
        }
    }

    function employeeNameDropDownList() {

        $.ajax({
            url: server + ""/CoreCommon/api/Employee/GetEmployeeAll"",
            type: ""Get"",
            datatype: ""JSON"",
            contentType: ""application/json"",
            crossDomain: ""true"",

            error: function () {
                alert("" An error occurred."");
            },
            success: function (da");
            WriteLiteral(@"ta) {
                for (var i = 0; i < data.objEmployeeList.length; i++) {
                    $(""#employeeNameDropDownList"").get(0).options[i] = new Option(data.objEmployeeList[i].name, data.objEmployeeList[i].employeeCode_PK, i);
                    
                }

            },
            error: function () {
                alert(""Failed to load Requisition Type"");

            }
        });

    } 

    //function LoadSelectedEmployeeData() {
    //    debugger

    //    var employeeCode = $(""#employeeNameDropDownList option:selected"").val();
        

    //}

    function prReferenceDropDownList() {

        $.ajax({
            url: server + ""/Procurement/api/PurchaseRequsition/GetRequisitionList"",
            type: ""Get"",
            datatype: ""JSON"",
            contentType: ""application/json"",
            crossDomain: ""true"",

            error: function () {
                alert("" An error occurred."");
            },
            success: function (data");
            WriteLiteral(@") {
                for (var i = 0; i < data.purchaseRequisitions.length; i++) {
                    $(""#prReferenceDropDownList"").get(0).options[i] = new Option(data.purchaseRequisitions[i].RequisitionID,
                        data.purchaseRequisitions[i].RequisitionCode_PK, i);
                }
            },
            error: function () {
                alert(""Failed to load PR Reference"");

            }
        });

    }

    function LoadSelectedPrReferenceData() {
        debugger

        var department = $(""#prReferenceDropDownList option:selected"").val();
        
        var rData = department;
        //var rData = ""9c8bbc35-42ef-4efb-ac67-3b5c15a9d086"";
        
        $.ajax({
            url: server + ""/Procurement/api/PurchaseRequsition/GetRequisitionByCode?requisitionCode="" + rData,
            type: ""Get"",
            datatype: ""json"",
            contentType: ""application/json"",
            data: { get_param: 'value' },
            crossDomain: ""true"",
");
            WriteLiteral(@"
            error: function () {
                alert("" An error occurred."");
            },
            success: function (data) {
                debugger

                //document.location.reload();
                tableName_TBL = data.purchaseRequisitions.TableName_TBL;
                requisitionID = data.purchaseRequisitions.RequisitionID;
                requisitionType = data.purchaseRequisitions.RequisitionType;
                requisitionType_VW = data.purchaseRequisitions.RequisitionType_VW;
                requisitionTitle = data.purchaseRequisitions.RequisitionTitle;
                requisitionFor = data.purchaseRequisitions.RequisitionFor;
                requisitionFor_VW = data.purchaseRequisitions.RequisitionFor_VW;
                requisitionForType = data.purchaseRequisitions.RequisitionForType;
                requisitionForTypeName_VW = data.purchaseRequisitions.RequisitionForTypeName_VW;
                remarks = data.purchaseRequisitions.Remarks;
                req");
            WriteLiteral(@"uisitionDate = data.purchaseRequisitions.RequisitionDate;
                reqProductCategory = data.purchaseRequisitions.ReqProductCategory;
                reqProductCategory_VW = data.purchaseRequisitions.ReqProductCategory_VW;
                address = data.purchaseRequisitions.Address;
                isApproved = data.purchaseRequisitions.IsApproved;
                penaltyClause = data.purchaseRequisitions.PenaltyClause;
                requester = data.purchaseRequisitions.Requester;
                requester_VW = data.purchaseRequisitions.Requester_VW;
                submissionDeadline = data.purchaseRequisitions.SubmissionDeadline;
                warrantyToDate = data.purchaseRequisitions.WarrantyToDate;
                warrantyFromDate = data.purchaseRequisitions.WarrantyFromDate;
                maturityTo = data.purchaseRequisitions.MaturityTo;
                maturityFrom = data.purchaseRequisitions.MaturityFrom;
                requisitionCode_PK = data.purchaseRequisitions.Requis");
            WriteLiteral(@"itionCode_PK;
                approvalAction = data.purchaseRequisitions.ApprovalAction;
                priceLock = data.purchaseRequisitions.PriceLock;
                priceLockName_VW = data.purchaseRequisitions.PriceLockName_VW;
                employeeId_VW = data.purchaseRequisitions.EmployeeId_VW;

                LoadRequisitionData();

                debugger

                for (var i = 0; i < data.purchaseRequisitions.PurchaseRequisitionItemList_VW.length; i++) {
                    var jObjPurchaseRequisitionItemList_VW = {
                        ""TableName_TBL"": """",
                        ""ProductCode"": """",
                        ""ProductID_VW"": """",
                        ""ProductName_VW"": """",
                        ""RequisitionCode"": """",
                        ""RequisitionDetCode_PK"": """",
                        ""ProductCatagory_VW"": """",
                        ""RequisitionCode"": """",
                        ""Quantity"": """",
                        ""ProductType"": """",
");
            WriteLiteral(@"                        ""QunatityMOUCode"": """",
                        ""QunatityMOU_VW"": """",
                        ""PurchaseReqItemSpecificationList_VW"": [
                            {
                                ""TableName_TBL"": """",
                                ""ProductSpecification"": """",
                                ""SpecificationCode_PK"": """",
                                ""RequisitionDetCode"": """",
                                ""IsNew"": """",
                                ""IsDeleted"": """",
                                ""UserCode"": """",
                                ""ActionType"": """",
                                ""ActionDate"": """",
                                ""CompanyCode_FK"": """",
                                ""IsDirty"": """"
                            }],
                    };

                    jObjPurchaseRequisitionItemList_VW.TableName_TBL = data.purchaseRequisitions.PurchaseRequisitionItemList_VW[i].TableName_TBL;
                    jObjPurchaseRequisitionItemList_VW.Pro");
            WriteLiteral(@"ductCode = data.purchaseRequisitions.PurchaseRequisitionItemList_VW[i].ProductCode;
                    jObjPurchaseRequisitionItemList_VW.ProductID_VW = data.purchaseRequisitions.PurchaseRequisitionItemList_VW[i].ProductID_VW;
                    jObjPurchaseRequisitionItemList_VW.ProductName_VW = data.purchaseRequisitions.PurchaseRequisitionItemList_VW[i].ProductName_VW;
                    jObjPurchaseRequisitionItemList_VW.RequisitionDetCode_PK = data.purchaseRequisitions.PurchaseRequisitionItemList_VW[i].RequisitionDetCode_PK;
                    jObjPurchaseRequisitionItemList_VW.ProductCatagory_VW = data.purchaseRequisitions.PurchaseRequisitionItemList_VW[i].ProductCatagory_VW;
                    jObjPurchaseRequisitionItemList_VW.RequisitionCode = data.purchaseRequisitions.PurchaseRequisitionItemList_VW[i].RequisitionCode;
                    jObjPurchaseRequisitionItemList_VW.Quantity = data.purchaseRequisitions.PurchaseRequisitionItemList_VW[i].Quantity;
                    jObjPurchaseRequisitionI");
            WriteLiteral(@"temList_VW.ProductType = data.purchaseRequisitions.PurchaseRequisitionItemList_VW[i].ProductType;
                    jObjPurchaseRequisitionItemList_VW.QunatityMOUCode = data.purchaseRequisitions.PurchaseRequisitionItemList_VW[i].QunatityMOUCode;
                    jObjPurchaseRequisitionItemList_VW.QunatityMOU_VW = data.purchaseRequisitions.PurchaseRequisitionItemList_VW[i].QunatityMOU_VW;
                    jObjPurchaseRequisitionItemList_VW.PurchaseReqItemSpecificationList_VW = arrayPurchaseReqItemSpecificationList_VW;
                    jObjPurchaseRequisitionItemList_VW.PurchaseRequisitionTermsList_VW = arrayPurchaseRequisitionTermsList_VW;

                    for (var j = 0; j < data.purchaseRequisitions.PurchaseRequisitionItemList_VW[i].PurchaseReqItemSpecificationList_VW.length; j++) {

                        var jObjPurchaseReqItemSpecificationList_VW = {
                            ""TableName_TBL"": """",
                            ""ProductSpecification"": """",
                            """);
            WriteLiteral(@"SpecificationCode_PK"": """",
                            ""RequisitionDetCode"": """",
                            ""IsNew"": """",
                            ""IsDeleted"": """",
                            ""UserCode"": """",
                            ""ActionType"": """",
                            ""ActionDate"": """",
                            ""CompanyCode_FK"": """",
                            ""IsDirty"": """"
                        };
                        debugger
                        jObjPurchaseReqItemSpecificationList_VW.ProductSpecification = data.purchaseRequisitions.PurchaseRequisitionItemList_VW[i].PurchaseReqItemSpecificationList_VW[j].ProductSpecification;
                        jObjPurchaseReqItemSpecificationList_VW.SpecificationCode_PK = """";
                        jObjPurchaseReqItemSpecificationList_VW.RequisitionDetCode = """";

                        arrayPurchaseReqItemSpecificationList_VW.push(jObjPurchaseReqItemSpecificationList_VW);

                    }
                    AddToTable(jObj");
            WriteLiteral(@"PurchaseRequisitionItemList_VW);

                    arrayPurchaseReqItemSpecificationList_VW = [];
                }

                for (var i = 0; i < data.purchaseRequisitions.PurchaseRequisitionTermsList_VW.length; i++) {
                    arrayPurchaseRequisitionTermsList_VW = [];
                    var jObjPurchaseRequisitionTermsList_VW = {
                        ""TableName_TBL"": """",
                        ""Remarks"": """",
                        ""ConditionCode_PK"": """",
                        ""Condition_VW"": """",
                        ""ConSLNo"": """",
                        ""RequisitionCode"": """",
                        ""IsNew"": """",
                        ""IsDeleted"": """",
                        ""UserCode"": """",
                        ""ActionType"": """",
                        ""ActionDate"": """",
                        ""CompanyCode_FK"": """",
                        ""IsDirty"": """"
                    }
                    debugger
                    var index = $(""#tblDocuments"").childre");
            WriteLiteral(@"n(""tr"").length;
                    jObjPurchaseRequisitionTermsList_VW.ConditionCode_PK = data.purchaseRequisitions.PurchaseRequisitionTermsList_VW[i].ConditionCode_PK;
                    jObjPurchaseRequisitionTermsList_VW.Condition_VW = data.purchaseRequisitions.PurchaseRequisitionTermsList_VW[i].Condition_VW;
                    jObjPurchaseRequisitionTermsList_VW.ConSLNo = data.purchaseRequisitions.PurchaseRequisitionTermsList_VW[i].ConSLNo;

                    jObjPurchaseRequisitionTermsList_VW.RequisitionCode = data.purchaseRequisitions.PurchaseRequisitionTermsList_VW[i].RequisitionCode;
                    jObjPurchaseRequisitionTermsList_VW.Remarks = data.purchaseRequisitions.PurchaseRequisitionTermsList_VW[i].Remarks;

                    arrayPurchaseRequisitionTermsList_VW.push(jObjPurchaseRequisitionTermsList_VW);

                    AddDocuments(index, jObjPurchaseRequisitionTermsList_VW.ConditionCode_PK, jObjPurchaseRequisitionTermsList_VW.Condition_VW, jObjPurchaseRequisitionTerm");
            WriteLiteral(@"sList_VW.Remarks);
                    
                }
            },
            error: function () {
                alert(""Failed to load Requisition Data"");

            }
        });

    }

    function LoadRequisitionData() {

        if (requisitionID != """") {
            debugger
            document.getElementById(""departmentTxtField"").value = requisitionFor_VW;
            document.getElementById(""rfpTypeTxtField"").value = requisitionType_VW;
            document.getElementById(""rfpTitleTxtField"").value = requisitionTitle;
            document.getElementById(""priceLockTxtField"").value = priceLockName_VW;
        }
        else {
            alert(""Data not found for this Requisition!!"");
        }
    }

    function AddToTable(ObjProductDetails) {
        //debugger

        DynamicRow();
        debugger
        document.getElementById(""CategoryName"" + [i]).innerHTML = ObjProductDetails.ProductCatagory_VW;
        document.getElementById(""ItemName"" + [i]).innerH");
            WriteLiteral(@"TML = ObjProductDetails.ProductName_VW;
        document.getElementById(""ItemCode"" + [i]).innerHTML = ObjProductDetails.ProductID_VW;

        for (k = 0; k < ObjProductDetails.PurchaseReqItemSpecificationList_VW.length; k++) {
            if (ObjProductDetails.PurchaseReqItemSpecificationList_VW.length > 0) {
                var input = document.createElement(""text"");
                input.type = ""text"";
                input.id = ""SpecificationName"" + [i];
                document.getElementById(""SpecificationName"" + [i]).appendChild(input).innerHTML = "","" + ObjProductDetails.PurchaseReqItemSpecificationList_VW[k].ProductSpecification;
            }
        }
        document.getElementById(""PRQTY"" + [i]).innerHTML = ObjProductDetails.Quantity;
        document.getElementById(""Unit"" + [i]).innerHTML = ObjProductDetails.QunatityMOU_VW;
        i = i + 1;
    }

    function DynamicRow() {
        debugger;
        table = document.getElementById(""dynamicRow"");
        row = table.insertRow");
            WriteLiteral(@"(i + 1);

        var cell1 = row.insertCell(0);
        var cell2 = row.insertCell(1);
        var cell3 = row.insertCell(2);
        var cell4 = row.insertCell(3);
        var cell5 = row.insertCell(4);
        var cell6 = row.insertCell(5);
        //var cell7 = row.insertCell(6);
        debugger
        cell1.innerHTML = '<p id=""CategoryName' + [i] + '""></p>';
        cell2.innerHTML = '<p id=""ItemName' + [i] + '""></p>';
        cell3.innerHTML = '<p id=""ItemCode' + [i] + '""></p>';
        cell4.innerHTML = '<p id=""SpecificationName' + [i] + '""></p>';
        cell5.innerHTML = '<p id=""PRQTY' + [i] + '""></p>';
        cell6.innerHTML = '<p id=""Unit' + [i] + '""></p>';
        //cell7.innerHTML = '<button type=""button"" class=""btn-add"" onclick=""RemoveBox(this)"" style=""width:100px"">Remove</button></td>';

    }
    
    function RemoveBox(row) {
        var d = row.parentNode.parentNode.rowIndex;
        document.getElementById('dynamicRow').deleteRow(d);
        //jList.remove(d);
   ");
            WriteLiteral(@"     i = i - 1;
    }
    

    function AddProductDetailsToJson() {
        debugger
        if ($(""#prquantity"").val() == """") {
            alert(""Quantity field can't be empty!"");
        }
        else {
            //Add to the table of Product/Service Details for View in the screen
            jObj = {
                Category: """",
                ItemCode: """",
                ItemName: """",
                Specification: {

                },
                PRQty: """",
                Unit: """"
            };

            var Category = $(""#categoryDropDownList option:selected"").text();
            jObj.Category = Category;

            var pItemName = $(""#productNameDropDownList option:selected"").text();
            jObj.ItemName = pItemName;
            var pItemCode = $(""#productNameDropDownList option:selected"").val();
            jObj.ItemCode = pItemCode;
            jObj.Specification = myArray;
            jObj.PRQty = $(""#prquantity"").val();


            var pUn");
            WriteLiteral(@"it = $(""#unitDropDownList option:selected"").text();
            jObj.Unit = pUnit;
            jList.push(jObj);
            DynamicRow();
            //AddToTable(jObj);
            myArray = [];
            ////End of the table of Product/Service Details for View in the screen

            debugger
            var jObjPurchaseRequisitionItemList_VW = {
                ""ProductCatagory_NM"": """",
                ""ProductName_VW"": """",
                ""UnitName"": """",
                ""RequisitionDetCode_PK"": """",
                ""RequisitionCode"": """",
                ""ProductCode"": """",
                ""Quantity"": 0,
                ""QunatityMOUCode"": 1,
                ""PurchaseReqItemSpecificationList_VW"": [
                    {
                        ""ProductSpecification"": """",
                        ""SpecificationCode_PK"": """",
                        ""RequisitionDetCode"": """"
                    }]
            };

            jObjPurchaseRequisitionItemList_VW.ProductCatagory_NM = $(");
            WriteLiteral(@"""#categoryDropDownList option:selected"").text();
            jObjPurchaseRequisitionItemList_VW.ProductName_VW = $(""#productNameDropDownList option:selected"").text();
            jObjPurchaseRequisitionItemList_VW.UnitName = $(""#unitDropDownList option:selected"").text();
            jObjPurchaseRequisitionItemList_VW.RequisitionDetCode_PK = """";
            jObjPurchaseRequisitionItemList_VW.RequisitionCode = """";
            jObjPurchaseRequisitionItemList_VW.ProductCode = pItemCode;
            jObjPurchaseRequisitionItemList_VW.Quantity = $(""#prquantity"").val();
            jObjPurchaseRequisitionItemList_VW.QunatityMOUCode = parseInt($(""#unitDropDownList option:selected"").val(), 10);
            jObjPurchaseRequisitionItemList_VW.PurchaseReqItemSpecificationList_VW = arrayPurchaseReqItemSpecificationList_VW;

            arrayPurchaseRequisitionItemList_VW.push(jObjPurchaseRequisitionItemList_VW);
            AddToTable(jObjPurchaseRequisitionItemList_VW);

            arrayPurchaseReqItemSpeci");
            WriteLiteral(@"ficationList_VW = [];
        }
    }


    function AddDocumentstoGrid() {
        debugger
        var isIncluded;
        ConditionCode_PK = $(""#tcTypeDropDownList option:selected"").val();

        if (start > 0) {
            isIncluded = CheckIsIncluded(arrayPurchaseRequisitionTermsList_VW, ""ConditionCode_PK"", ConditionCode_PK) //arrayPurchaseRequisitionTermsList_VW.includes(""ConditionCode_PK"" + "":"" + ConditionCode_PK);
            start = start + 1;

        }
        else {
            isIncluded = ""false"";
            start = start + 1;
        }

        if (isIncluded == ""false"") {
            debugger
            var jObjPurchaseRequisitionTermsList_VW = {
                ""ConditionCode_PK"": """",
                ""ConSLNo"": 0,
                ""RequisitionCode"": """",
                ""Remarks"": """"
            }

            var index = $(""#tblDocuments"").children(""tr"").length;
            pTcValue = $(""#tcTypeDropDownList option:selected"").val();
            pTcType = $(""#");
            WriteLiteral(@"tcTypeDropDownList option:selected"").text();
            pDescription = $(""#desription"").val();


            jObjPurchaseRequisitionTermsList_VW.ConditionCode_PK = $(""#tcTypeDropDownList option:selected"").val();
            jObjPurchaseRequisitionTermsList_VW.ConSLNo = ConSLNo;
            ConSLNo = ConSLNo + 1;
            jObjPurchaseRequisitionTermsList_VW.RequisitionCode = """";
            jObjPurchaseRequisitionTermsList_VW.Remarks = $(""#desription"").val();

            arrayPurchaseRequisitionTermsList_VW.push(jObjPurchaseRequisitionTermsList_VW);

            AddDocuments(index, pTcValue, pTcType, pDescription);

            document.getElementById(""desription"").value = """";

        }
        else {
            alert(""You have already added the same Condition!"");
            start = start - 1;
        }

    }
    
    function AddDocuments(index, pTcValue, pTcType, pDescription) {
        debugger
        var SLno = index + 1;
        var indexCell = ""<td style='display:none");
            WriteLiteral(@"'><input type='hidden' name='Documents.Index'  value='"" +
            index +
            ""' /></td>"";

        var SLCell = ""<td><input type='hidden'  id='Documents"" +
            index +
            ""_slNo' name='Documents["" +
            index +
            ""].slNo' value='"" +
            SLno +
            ""' />"" +
            SLno +
            ""</td>"";
        var TcTypeCell = ""<td><input type='hidden'   id='Documents"" +
            index +
            ""_pTcType' name='Documents["" +
            index +
            ""].pTcType' value='"" +
            pTcType +
            ""' />"" +
            pTcType +
            ""</td>"";
        var DescriptionCell = ""<td><input type='hidden'  id='Documents"" +
            index +
            ""_pDescription' name='Documents["" +
            index +
            ""].pDescription' value='"" +
            pDescription +
            ""' />"" +
            pDescription +
            ""</td>"";

        //var editCell = ""<td><input  id='btnEditType' cla");
            WriteLiteral(@"ss='btn btn-icon btn-danger btn-rounded' type='button' value='Edit' onclick='EditTermsRow("" +
        //    index +
        //    "",\"""" +
        //    pTcValue +
        //    ""\"");' /></td>"";

        //var editRemoveCell =
        //    ""<td><input  id='btnEditType'  class='btn btn-icon btn-danger btn-rounded' type='button' value='Edit'  onclick='EditTermsRow("" +
        //    index +
        //    "",\"""" +
        //    pTcValue +
        //    ""\"");' />&nbsp&nbsp<input  id='btnRemoveType' class='btn btn-icon btn-danger btn-rounded' type='button' value='Remove' onclick='RemoveTypeRow("" +
        //    index +
        //    "",\"""" +
        //    pTcValue +
        //    ""\"");' /></td>"";

        var newRow = ""<tr id='tblDocuments"" +
            index +
            ""'>"" +
            indexCell +
            SLCell +
            TcTypeCell +
            DescriptionCell +
            ""</tr>"";

        $(""#tblDocuments"").append(newRow);
        vArray.push({ DocumentName: pTcType });");
            WriteLiteral(@"

    }

    function RemoveTypeRow(id, pTcValue) {
        var controlToBeRemoved = ""#tblDocuments"" + id;
        $(controlToBeRemoved).remove();
        var index = findWithAttr(pTcValue);
        vArray.splice(index, 1);

        debugger
        arrayPurchaseRequisitionTermsList_VW.splice(index, 1);
        start = start - 1;

    }


    function EditTermsRow(id, pTcValue) {
        debugger
        var controlToBeRemoved = ""#tblDocuments"" + id;

        //Remove from the row
        $(controlToBeRemoved).remove();
        var index = findWithAttr(pTcValue);
        vArray.splice(index, 1);

        //Remove from arraylist
        arrayPurchaseRequisitionTermsList_VW.splice(index, 1);
        start = start - 1;

        //assign the values to the drop down and description textbox
        document.getElementById(""desription"").value = editTermsDescription;


    }

    //To find the index of the ConditionCode_PK from the ArrayList
    function findWithAttr(pTcValue) {
");
            WriteLiteral(@"
        if (arrayPurchaseRequisitionTermsList_VW.length > 0) {
            for (var i = 0; i < arrayPurchaseRequisitionTermsList_VW.length; i += 1) {
                if (arrayPurchaseRequisitionTermsList_VW[i][""ConditionCode_PK""] === pTcValue) {
                    editTermsDescription = arrayPurchaseRequisitionTermsList_VW[i].Remarks;
                    return i;
                }

            }
        }

        return -1;
    }

    function SubmitBtnClick() {
        debugger

        var objJson = {
            ""PublishDate"": """",
            ""RFProcessCode_PK"": """",
            ""RequisitionCode_FK"": ""d2884512-5c6e-4ceb-b9e0-5ac03d927068"",
            ""IsApproved"": 0,
            ""ClosingDate"": ""2019-03-08"",
            ""OpeningDate"": ""2019-03-05"",
            ""Status"": 1,
            ""InvitingAuthority"": """",
            ""Remarks"": """",
            ""ApprovalAction"": 0,
            ""RFProcessId"": """",
            ""CompanyCode_FK"": """",
            ""ActionType"": """",
            ");
            WriteLiteral(@"""UserCode"": """"
        }

        objJson.PublishDate = $(""#rfpPublishedDate"").val();
        objJson.RequisitionCode_FK = $(""#prReferenceDropDownList option:selected"").val();
        objJson.ClosingDate = $(""#rfpClosingDate"").val();
        objJson.OpeningDate = $(""#rfpOpeningDate"").val();
        objJson.InvitingAuthority = $(""#employeeNameDropDownList option:selected"").val(); 
        objJson.Status = $(""#priceLockDropDownList option:selected"").val(); 
        objJson.Remarks = $(""#remarksTxtField"").val();
        objJson.CompanyCode_FK = pCompanyCode;
        objJson.ActionType = ""INSERT"";
        objJson.UserCode = pUserCode;
        
        debugger

        var datas = JSON.stringify(objJson);

        $.ajax(
            {
                url: server + ""/Procurement/api/RFPProcessing/CreateRFPProcessing"", 
                dataType: ""json"",
                processData: false,
                contentType: 'application/json',
                type: ""POST"",
                data: d");
            WriteLiteral(@"atas,
                success: function (data) {
                    document.location.reload();
                    alert(""Save Succesfull!"");
                },
                error: function () {
                    alert(""There was error saving data!"");
                }
            }
        );


    }

    

    function showSpecificationByEnter() {
        debugger
        //var itemCode = $(""#productNameDropDownList option:selected"").val();
        for (var i = 0; i < myArray.length; i++) {
            var itemCode = myArray[i].specName
        }

        //$(""#prquantity"").val(itemCode);
    }

    function getCurrentDate() {
        var today = new Date();
        var dd = today.getDate();
        var mm = today.getMonth() + 1; //January is 0!
        var yyyy = today.getFullYear();

        if (dd < 10) {
            dd = '0' + dd
        }

        if (mm < 10) {
            mm = '0' + mm
        }

        today = yyyy + '-' + mm + '-' + dd;
        //con");
            WriteLiteral(@"sole.log(today);
        document.getElementById(""rfpPublishedDate"").value = today;
        document.getElementById(""rfpOpeningDate"").value = today;
        document.getElementById(""rfpClosingDate"").value = today;
    }

    function NewBtnClick() {
        document.location.reload();
    }


</script>



<div class=""body-content"">
    <div class=""box"">

        ");
            EndContext();
            BeginContext(30142, 3158, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "04d3faeb93184b3fba892bc6dac765ce", async() => {
                BeginContext(30148, 217, true);
                WriteLiteral("\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-10\">\r\n                    <label for=\"fname\">PR Reference:</label>\r\n                </div>\r\n                <div class=\"col-23\">\r\n                    ");
                EndContext();
                BeginContext(30366, 162, false);
#line 790 "E:\CenterPoint\CenterPointPortal\CenterPointUI\Views\Requisition\RFPDeclarationRequisition.cshtml"
               Write(Html.DropDownList("prReferenceDropDownList", new SelectList("", "Value", "Text"), new { @class = "form-control", onChange = "LoadSelectedPrReferenceData(this)" }));

#line default
#line hidden
                EndContext();
                BeginContext(30528, 2553, true);
                WriteLiteral(@"
                </div>
                <div class=""col-10"">
                    <label for=""fname"">Department:</label>
                </div>
                <div class=""col-23"">
                    <input type=""text"" id=""departmentTxtField"" readonly=""readonly"" />
                </div>
                <div class=""col-10"">
                    <label for=""fname"">RFP Type:</label>
                </div>
                <div class=""col-24"">
                    <input type=""text"" id=""rfpTypeTxtField"" readonly=""readonly"" />
                </div>
            </div>

            <div class=""row"">
                <div class=""col-10"">
                    <label for=""fname"">RFP Title</label>
                </div>
                <div class=""col-23"">
                    <input type=""text"" id=""rfpTitleTxtField"" readonly=""readonly"" />
                </div>
                <div class=""col-10"">
                    <label for=""fname"">RFP ID:</label>
                </div>
                <div cl");
                WriteLiteral(@"ass=""col-23"">
                    <input type=""text"" id=""rfpIDTxtField"" readonly=""readonly"" placeholder=""Auto Generate"" />
                </div>
                <div class=""col-10"">
                    <label for=""fname"">Price Lock:</label>
                </div>
                <div class=""col-24"">
                    <input type=""text"" id=""priceLockTxtField"" readonly=""readonly"" />
                </div>
            </div>

            <div class=""row"">
                <div class=""col-10"">
                    <label for=""fname"">RFP Published Date:</label>
                </div>
                <div class=""col-23"">
                    <input type=""date"" id=""rfpPublishedDate"" />
                </div>
                <div class=""col-10"">
                    <label for=""fname"">RFP Opening Date:</label>
                </div>
                <div class=""col-23"">
                    <input type=""date"" id=""rfpOpeningDate"" />
                </div>
                <div class=""col-10"">
    ");
                WriteLiteral(@"                <label for=""fname"">RFP Closing Date:</label>
                </div>
                <div class=""col-24"">
                    <input type=""date"" id=""rfpClosingDate"" />
                </div>
            </div>

            <div class=""row"">
                <div class=""col-10"">
                    <label for=""fname"">RFP Status:</label>
                </div>
                <div class=""col-23"">
                    <select id=""priceLockDropDownList"">
                        ");
                EndContext();
                BeginContext(33081, 31, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c65913ef47474e2ab843a160f58f2c29", async() => {
                    BeginContext(33099, 4, true);
                    WriteLiteral("Live");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(33112, 26, true);
                WriteLiteral("\r\n                        ");
                EndContext();
                BeginContext(33138, 32, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4da39229a2e34196a876293e1fee3e1e", async() => {
                    BeginContext(33156, 5, true);
                    WriteLiteral("Close");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(33170, 123, true);
                WriteLiteral("\r\n                    </select>\r\n                </div>\r\n                \r\n            </div>\r\n            <br />\r\n        ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(33300, 55, true);
            WriteLiteral("\r\n    </div>\r\n\r\n        <div class=\"box\">\r\n            ");
            EndContext();
            BeginContext(33355, 1959, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b9d18a0f213449d28b5d41b816deaecb", async() => {
                BeginContext(33361, 793, true);
                WriteLiteral(@"
                <fieldset>
                    <legend style=""color:brown"">Product/Service Details</legend>
                    <div>
                        <table id=""dynamicRow"" class=""table-hover"">
                            <thead>
                                <tr>
                                    <th><center>Category</center></th>
                                    <th><center>Item Name</center></th>
                                    <th><center>Item Code</center></th>
                                    <th><center>Specification</center></th>
                                    <th><center>PR Qty</center></th>
                                    <th><center>Unit</center></th>
                                </tr>
                            </thead>
");
                EndContext();
                BeginContext(35196, 111, true);
                WriteLiteral("\r\n                        </table>\r\n\r\n\r\n                    </div>\r\n\r\n                </fieldset>\r\n            ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(35314, 82, true);
            WriteLiteral("                       \r\n        </div>\r\n\r\n        <div class=\"box\">\r\n            ");
            EndContext();
            BeginContext(35396, 726, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b96a2832e4f244a1a3b7322d87bbabb7", async() => {
                BeginContext(35402, 713, true);
                WriteLiteral(@"
                <fieldset>
                    <legend style=""color:brown"">Terms & Condition</legend>
                    <table class=""table-hover"">
                        <thead>
                            <tr class=""HeaderRow"">
                                <th class=""HeaderCell"">SL No</th>
                                <th class=""HeaderCell"">T/C Type</th>
                                <th class=""HeaderCell"">Description</th>
                                <th class=""HeaderCell""></th>
                            </tr>
                        </thead>
                        <tbody id=""tblDocuments""></tbody>
                    </table>

                </fieldset>
            ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(36122, 59, true);
            WriteLiteral("\r\n        </div>\r\n\r\n        <div class=\"box\">\r\n            ");
            EndContext();
            BeginContext(36181, 2670, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "3e3e808acc0d44878431ed1c219bb65c", async() => {
                BeginContext(36187, 366, true);
                WriteLiteral(@"
                <fieldset>
                    <legend style=""color:brown"">RFP Inviting Authority</legend>

                    <div class=""row"">
                        <div class=""col-10"">
                            <label for=""fname"">Name:</label>
                        </div>
                        <div class=""col-23"">
                            ");
                EndContext();
                BeginContext(36554, 160, false);
#line 930 "E:\CenterPoint\CenterPointPortal\CenterPointUI\Views\Requisition\RFPDeclarationRequisition.cshtml"
                       Write(Html.DropDownList("employeeNameDropDownList", new SelectList("", "Value", "Text"), new { @class = "form-control", onChange = "LoadSelectedEmployeeData(this)" }));

#line default
#line hidden
                EndContext();
                BeginContext(36714, 357, true);
                WriteLiteral(@"
                        </div>
                        <div class=""col-10"">
                            <label for=""fname"">Remarks:</label>
                        </div>
                        <div class=""col-23"">
                            <input type=""text"" id=""remarksTxtField"" />
                        </div>

                    </div>
");
                EndContext();
                BeginContext(38797, 47, true);
                WriteLiteral("\r\n\r\n\r\n                </fieldset>\r\n            ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(38851, 221, true);
            WriteLiteral("\r\n            <div class=\"submitBtn\">\r\n                <button type=\"button\" id=\"addBtn\" class=\"btn-add\" onclick=\"SubmitBtnClick()\" style=\"width:100px\">Submit</button>\r\n            </div>\r\n        </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
