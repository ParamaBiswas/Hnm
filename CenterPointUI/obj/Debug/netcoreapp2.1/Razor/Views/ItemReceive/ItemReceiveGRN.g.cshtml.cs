#pragma checksum "E:\CenterPoint\CenterPointPortal\CenterPointUI\Views\ItemReceive\ItemReceiveGRN.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "bb960299e636fee5b3555d519575d348d4727f9f"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_ItemReceive_ItemReceiveGRN), @"mvc.1.0.view", @"/Views/ItemReceive/ItemReceiveGRN.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/ItemReceive/ItemReceiveGRN.cshtml", typeof(AspNetCore.Views_ItemReceive_ItemReceiveGRN))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "E:\CenterPoint\CenterPointPortal\CenterPointUI\Views\_ViewImports.cshtml"
using CenterPointUI;

#line default
#line hidden
#line 2 "E:\CenterPoint\CenterPointPortal\CenterPointUI\Views\_ViewImports.cshtml"
using CenterPointUI.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"bb960299e636fee5b3555d519575d348d4727f9f", @"/Views/ItemReceive/ItemReceiveGRN.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"2edc7cc0f3e77f68ee09f57f8aa10aed8980b104", @"/Views/_ViewImports.cshtml")]
    public class Views_ItemReceive_ItemReceiveGRN : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "E:\CenterPoint\CenterPointPortal\CenterPointUI\Views\ItemReceive\ItemReceiveGRN.cshtml"
  
    ViewData["Title"] = "ItemReceiveGRN";

#line default
#line hidden
            BeginContext(50, 18888, true);
            WriteLiteral(@"


<script type=""text/javascript"">


    var server = ""http://192.168.20.152"";
    var requestUrl;

    var objPurchaseOrderList;
    var objPurchaseOrder;
    var vArray = new Array();
    var vProductArray = new Array();
    var PurchaseOrderCode;
    //var pUserCode = ""9C6CA730-34AB-40B2-A0DC-17CD77330B9E"";
    //var pCompanyCode = 1;
    var today;
    var arrayItemReceiveDet_VW = [];

    var pUserCode = """";
    var pCompanyCode = 1;


    window.onload = function () {
        CheckUserIsLogedIn();
        

    }

    function CheckUserIsLogedIn() {
        debugger
        GetCookie();

        if (pUserCode != ""NotLogedIn"") {
            getCurrentDate();
        }
        else {
            requestUrl = server + ""/centerpoint/itemReceive/ItemReceiveGRN"";
            Cookies.set('RequestURL', requestUrl, { expires: 1 });
            window.location.href = ""../Login/LoginPageUI"";
        }
    }

    function GetCookie() {
        debugger
        pUserCode ");
            WriteLiteral(@"= Cookies.get('UserID');

        if (pUserCode == null || pUserCode == """") {
            // do cookie doesn't exist stuff;
            pUserCode = ""NotLogedIn"";
        }
        else {
            // do cookie exists stuff
            pUserCode = Cookies.get('UserID');
        }
    }




    function getCurrentDate() {
        today = new Date();
        var dd = today.getDate();
        var mm = today.getMonth() + 1; //January is 0!
        var yyyy = today.getFullYear();

        if (dd < 10) {
            dd = '0' + dd
        }

        if (mm < 10) {
            mm = '0' + mm
        }

        today = yyyy + '-' + mm + '-' + dd;
        //console.log(today);
        document.getElementById(""receiveDate"").value = today;
        //document.getElementById(""poDate"").value = today;
        document.getElementById(""popUpFromDateTxtField"").value = today;
        document.getElementById(""popUpToDateTxtField"").value = today;
    }

    function PreviewBtnClick() {
       ");
            WriteLiteral(@" $(""#tblPurchaseOrders tr"").remove();
        vArray = [];
        var pFromDate = $(""#popUpFromDateTxtField"").val();
        var pToDate = $(""#popUpToDateTxtField"").val();

        debugger
        $.ajax({

            url: server + ""/Procurement/api/PurchaseOrder/GetPurchaseOrders?pDateFrom="" + pFromDate + ""&pDateTo="" + pToDate,
            type: ""Get"",
            datatype: ""json"",
            contentType: ""application/json"",
            data: { get_param: 'value' },
            crossDomain: ""true"",

            error: function () {
                alert("" An error occurred."");
            },
            success: function (data) {

                objPurchaseOrderList = data.vList;

                LoadPurchaseOrderListData(objPurchaseOrderList);
            },
            error: function () {
                alert(""Failed to Code File Type Data"");

            }
        });
    }

    function LoadPurchaseOrderListData(ObjList) {
        debugger
        if (ObjList.lengt");
            WriteLiteral(@"h > 0) {
            for (var i = 0; i < ObjList.length; i++) {
                var jObjlistPurchaseOrder = {
                    ""TableName_TBL"": """",
                    ""PurchaseOrderNo"": """",
                    ""QuotationCode"": """",
                    ""SupplierCode"": """",
                    ""Remarks"": """",
                    ""OrderDate"": """",
                    ""RequisitionCode"": """",
                    ""IsAcceptedBySupplier"": """",
                    ""TotatlQuotationScore"": """",
                    ""ApprovalAction"": """",
                    ""IsApproved"": """",
                    ""PurchaseOrderCode_PK"": """",
                    ""SupplierID_VW"": """",
                    ""SupplierName_VW"": """",
                    ""SupplierAddress_VW"": """",
                    ""RequisitionID_VW"": """",
                    ""RequisitionTitle_VW"": """",
                    ""QuotationItemList_VW"": """",
                    ""IsNew"": """",
                    ""IsDeleted"": """",
                    ""UserCode"": """",
                    ""ActionType""");
            WriteLiteral(@": """",
                    ""ActionDate"": """",
                    ""CompanyCode_FK"": """",
                    ""IsDirty"": """"
                }
                debugger
                var index = $(""#tblCodeFileTypeAll"").children(""tr"").length;

                jObjlistPurchaseOrder.TableName_TBL = ObjList[i].TableName_TBL;
                jObjlistPurchaseOrder.PurchaseOrderNo = ObjList[i].PurchaseOrderNo;
                jObjlistPurchaseOrder.QuotationCode = ObjList[i].QuotationCode;
                jObjlistPurchaseOrder.SupplierCode = ObjList[i].SupplierCode;
                jObjlistPurchaseOrder.Remarks = ObjList[i].Remarks;
                jObjlistPurchaseOrder.OrderDate = ObjList[i].OrderDate;
                jObjlistPurchaseOrder.RequisitionCode = ObjList[i].RequisitionCode;
                jObjlistPurchaseOrder.IsAcceptedBySupplier = ObjList[i].IsAcceptedBySupplier;
                jObjlistPurchaseOrder.TotatlQuotationScore = ObjList[i].TotatlQuotationScore;
                jObjlistPurchaseOrde");
            WriteLiteral(@"r.ApprovalAction = ObjList[i].ApprovalAction;
                jObjlistPurchaseOrder.IsApproved = ObjList[i].IsApproved;
                jObjlistPurchaseOrder.PurchaseOrderCode_PK = ObjList[i].PurchaseOrderCode_PK;
                jObjlistPurchaseOrder.SupplierID_VW = ObjList[i].SupplierID_VW;
                jObjlistPurchaseOrder.SupplierName_VW = ObjList[i].SupplierName_VW;
                jObjlistPurchaseOrder.SupplierAddress_VW = ObjList[i].SupplierAddress_VW;
                jObjlistPurchaseOrder.RequisitionID_VW = ObjList[i].RequisitionID_VW;
                jObjlistPurchaseOrder.RequisitionTitle_VW = ObjList[i].RequisitionTitle_VW;
                jObjlistPurchaseOrder.QuotationItemList_VW = ObjList[i].QuotationItemList_VW;
                jObjlistPurchaseOrder.IsNew = ObjList[i].IsNew;
                jObjlistPurchaseOrder.IsDeleted = ObjList[i].IsDeleted;
                jObjlistPurchaseOrder.UserCode = ObjList[i].UserCode;
                jObjlistPurchaseOrder.ActionType = ObjList[i].Acti");
            WriteLiteral(@"onType;
                jObjlistPurchaseOrder.ActionDate = ObjList[i].ActionDate;
                jObjlistPurchaseOrder.CompanyCode_FK = ObjList[i].CompanyCode_FK;
                jObjlistPurchaseOrder.IsDirty = ObjList[i].IsDirty;

                PurchaseOrderCode = jObjlistPurchaseOrder.PurchaseOrderCode_PK;

                AssignToPurchaseOrderTable(jObjlistPurchaseOrder.PurchaseOrderNo, jObjlistPurchaseOrder.OrderDate, jObjlistPurchaseOrder.SupplierName_VW, jObjlistPurchaseOrder.RequisitionID_VW, jObjlistPurchaseOrder.PurchaseOrderCode_PK);
            }
        }
        else {
            alert(""No Data Found!!"");
        }
    }

    function AssignToPurchaseOrderTable(pPurchaseOrderNo, pOrderDate, pSupplierName, pRequisitionId, pPurchaseOrderCode) {
        debugger
        var SLno = pPurchaseOrderNo;
        var indexCell = ""<td style='display:none'><input type='hidden' name='Documents.Index'  value='"" +
            pPurchaseOrderNo +
            ""' /></td>"";

        //var S");
            WriteLiteral(@"LCell = ""<td><input type='hidden'  id='Documents"" +
        //    pPurchaseOrderNo +
        //    ""_slNo' name='Documents["" +
        //    pPurchaseOrderNo +
        //    ""].slNo' value='"" +
        //    SLno +
        //    ""' />"" +
        //    SLno +
        //    ""</td>"";

        var SLCell = ""<td><a href='javascript:GetPurchaseOrderByCode(\"""" + pPurchaseOrderCode + ""\"")' onclick='GetPurchaseOrderByCode(\"""" + pPurchaseOrderCode + ""\"")' id='"" + pPurchaseOrderCode +""'>"" +
            pPurchaseOrderNo +
            ""</a></td>"";
        
        
        var orderDateCell = ""<td><input type='hidden'   id='Documents"" +
            pPurchaseOrderNo +
            ""_pTcType' name='Documents["" +
            pPurchaseOrderNo +
            ""].pTcType' value='"" +
            pOrderDate +
            ""' />"" +
            pOrderDate +
            ""</td>"";
        var supplierNameCell = ""<td><input type='hidden'   id='Documents"" +
            pPurchaseOrderNo +
            ""_pTcType' name");
            WriteLiteral(@"='Documents["" +
            pPurchaseOrderNo +
            ""].pTcType' value='"" +
            pSupplierName +
            ""' />"" +
            pSupplierName +
            ""</td>"";

        var requisitionIdCell = ""<td><input type='hidden'   id='Documents"" +
            pPurchaseOrderNo +
            ""_pTcType' name='Documents["" +
            pPurchaseOrderNo +
            ""].pTcType' value='"" +
            pRequisitionId +
            ""' />"" +
            pRequisitionId +
            ""</td>"";
        

        var newRow = ""<tr id='tblDocuments"" +
            pPurchaseOrderNo +
            ""'>"" +
            indexCell +
            SLCell +
            orderDateCell +
            supplierNameCell +
            requisitionIdCell +
            ""</tr>"";

        $(""#tblPurchaseOrders"").append(newRow);
        vArray.push({ DocumentName: pPurchaseOrderNo });

    }

    function GetPurchaseOrderByCode(pPurchaseOrderCode) {
        debugger
        $.ajax({

            url: s");
            WriteLiteral(@"erver + ""/Procurement/api/PurchaseOrder/GetPurchaseOrderByCode?PurchaseOrderCode="" + pPurchaseOrderCode,
            type: ""Get"",
            datatype: ""json"",
            contentType: ""application/json"",
            data: { get_param: 'value' },
            crossDomain: ""true"",

            error: function () {
                alert("" An error occurred."");
            },
            success: function (data) {
                debugger
                objPurchaseOrder = data.vList;
                $('#purchaseOrderPopUp').modal('hide');
                

                LoadPurchaseOrderData(objPurchaseOrder);
            },
            error: function () {
                alert(""Failed to load Purchase Order Data"");

            }
        });
    }

    function LoadPurchaseOrderData(objPurchaseOrderData) {
        debugger
        $(""#productServiceDetailsTable tr"").remove();
        vProductArray = [];

        document.getElementById(""poNumberTxtField"").value = objPurchaseOrde");
            WriteLiteral(@"rData.PurchaseOrderNo;
        document.getElementById(""vendorDetailsTxtField"").value = ""Supplier Name: ""+objPurchaseOrderData.SupplierName_VW;
        document.getElementById(""vendorDetailsTxtField"").value = document.getElementById(""vendorDetailsTxtField"").value + ""\nSupplier Address: "" + objPurchaseOrderData.SupplierAddress_VW;

        //Get Date and convert it format to the specific format yyyy-mm-dd
        //var orderDate = new Date(objPurchaseOrderData.OrderDate);
        //var dd = orderDate.getDate();
        //var mm = orderDate.getMonth() + 1; //January is 0!
        //var yyyy = orderDate.getFullYear();

        //if (dd < 10) {
        //    dd = '0' + dd
        //}

        //if (mm < 10) {
        //    mm = '0' + mm
        //}

        //poDate = yyyy + '-' + mm + '-' + dd;

        document.getElementById(""poDate"").value = objPurchaseOrderData.OrderDate;
        document.getElementById(""remarksTxtField"").value = objPurchaseOrderData.Remarks;

        for (var i = 0; i");
            WriteLiteral(@" < objPurchaseOrderData.QuotationItemList_VW.length; i++) {
            var ObjProductDetails = objPurchaseOrderData.QuotationItemList_VW[i];
            AssignToProductOrServicesDetailsTable(ObjProductDetails);
        }
    }

    function AssignToProductOrServicesDetailsTable(ObjProductDetails) {
        debugger
        //var QCode = ObjProductDetails.QuotationCode;

        var SLno = 0;

        var indexCell = ""<td style='display:none'><input type='hidden' name='Documents.Index'  value='"" +
            ObjProductDetails.ProductCode +
            ""' /></td>"";

        var SLCell = ""<td><input type='hidden'  id='Documents"" +
            ObjProductDetails.ProductCode +
            ""_slNo' name='Documents["" +
            ObjProductDetails.ProductCode +
            ""].slNo' value='"" +
            SLno +
            ""' />"" +
            SLno +
            ""</td>"";

        var productNameCell = ""<td><input type='hidden'   id='Documents"" +
            ObjProductDetails.ProductCode +");
            WriteLiteral(@"
            ""_pProductName' name='Documents["" +
            ObjProductDetails.ProductCode +
            ""]._pProductName' value='"" +
            ObjProductDetails.ProductName_VW +
            ""' />"" +
            ObjProductDetails.ProductName_VW +
            ""</td>"";

        var productCategoryCell = ""<td><input type='hidden'   id='Documents"" +
            ObjProductDetails.ProductCode +
            ""_pProductCategory' name='Documents["" +
            ObjProductDetails.ProductCode +
            ""]._pProductCategory' value='"" +
            ObjProductDetails.ProductCatagory_NM +
            ""' />"" +
            ObjProductDetails.ProductCatagory_NM +
            ""</td>"";

        var productQtyCell = ""<td><input type='hidden'   id='Documents"" +
            ObjProductDetails.ProductCode +
            ""_pProductQty' name='Documents["" +
            ObjProductDetails.ProductCode +
            ""]._pProductQty' value='"" +
            ObjProductDetails.Quantity +
            ""' />"" +
       ");
            WriteLiteral(@"     ObjProductDetails.Quantity +
            ""</td>"";

        var receiveQtyCell = ""<td><input type='number' id='Documents"" + ObjProductDetails.ProductCode +
            ""_pProductRecQty' name='Documents["" +
            ObjProductDetails.ProductCode +
            ""]._pProductRecQty' onchange='CalculateRemainingQty("" + ObjProductDetails.Quantity + "",""+""""+""\""Documents""+ ObjProductDetails.ProductCode +
            ""_pProductRecQty\"","" + """" + ""\""Documents"" + ObjProductDetails.ProductCode +
            ""_pProductRemainingQty\"")' value='"" +
            ObjProductDetails.ProductCode +
            ""' /></td>""

        var remainingQtyCell = ""<td><input type='number' readonly='readonly' id='Documents"" + ObjProductDetails.ProductCode +
            ""_pProductRemainingQty' name='Documents["" +
            ObjProductDetails.ProductCode +
            ""]._pProductRemainingQty' value='"" +
            ObjProductDetails.ProductCode +
            ""' /></td>""

        var newRow = ""<tr id='tblDocuments"" +
  ");
            WriteLiteral(@"          ObjProductDetails.ProductCode +
            ""'>"" +
            indexCell +
            SLCell +
            productNameCell +
            productCategoryCell +
            productQtyCell +
            receiveQtyCell +
            remainingQtyCell +
            ""</tr>"";

        $(""#productServiceDetailsTable"").append(newRow);
        vProductArray.push({ DocumentName: ObjProductDetails.ProductCode });
    }

    function CalculateRemainingQty(Qty, RecQty, RemainingField) {
        debugger
        var poQty = Qty;
        var recQty = parseInt($(""#"" + RecQty).val(), 10);

        if (recQty > poQty) {
            alert(""You can't receive more than Purchase Quantity"");
            document.getElementById(RemainingField).value = """";
        }
        else {
            var remainigQty = poQty - recQty;
            document.getElementById(RemainingField).value = remainigQty;
        }
        
    }

    function KeyPress() {
        debugger
        var key = event.whi");
            WriteLiteral(@"ch || event.keyCode;
        if (key == '119') {
            debugger
            //$('#purchaseOrderPopUp').modal('show');

            $(""#purchaseOrderPopUp"").modal({
                show: true,
                backdrop: 'static',
                keyboard: false
            });
        }
    }

    function SubmitBtnClick() {
        debugger

        var PoId = $(""#poNumberTxtField"").val();

        if (PoId != """") {
            var ObjSubmit = {
                ""GRN"": """",
                ""Remarks"": """",
                ""ReceiveDate"": """",
                ""POCode"": """",
                ""ApprovalAction"": """",
                ""IsApproved"": """",
                ""ReceiveCode_PK"": """",
                ""CompanyCode_FK"": """",
                ""ActionType"": """",
                ""UserCode"": """",
                ""ActionDate"": """",
                ""ItemReceiveDet_VW"": [
                    {
                    }
                ]
            }

            ObjSubmit.Remarks = $(""#remarksTx");
            WriteLiteral(@"tField"").val();
            ObjSubmit.ReceiveDate = $(""#receiveDate"").val();
            ObjSubmit.POCode = PurchaseOrderCode;
            ObjSubmit.ApprovalAction = 0;
            ObjSubmit.IsApproved = 0;
            ObjSubmit.CompanyCode_FK = pCompanyCode;
            ObjSubmit.ActionType = ""INSERT"";
            ObjSubmit.UserCode = pUserCode;
            ObjSubmit.ActionDate = today;

            for (var i = 0; i < objPurchaseOrder.QuotationItemList_VW.length; i++) {
                debugger

                var jObjItemReceiveDet_VW = {
                    ""ItemCode"": """",
                    ""ReceiveQuantity"": """",
                    ""ReceiveDetCode_PK"": """"
                }

                var ItemCode = objPurchaseOrder.QuotationItemList_VW[i].ProductCode;
                var ReceiveQty = $(""#Documents"" + ItemCode + ""_pProductRecQty"").val();
                var PoQty = objPurchaseOrder.QuotationItemList_VW[i].Quantity;

                if (ReceiveQty > PoQty) {
               ");
            WriteLiteral(@"     alert(""You can't Receive more than Purchase Order Qty!"");
                }
                else {
                    jObjItemReceiveDet_VW.ItemCode = ItemCode;
                    jObjItemReceiveDet_VW.ReceiveQuantity = ReceiveQty;

                    arrayItemReceiveDet_VW.push(jObjItemReceiveDet_VW);
                }
            }

            if (arrayItemReceiveDet_VW.length > 0) {
                ObjSubmit.ItemReceiveDet_VW = arrayItemReceiveDet_VW;

                debugger

                var datas = JSON.stringify(ObjSubmit);

                $.ajax(
                    {
                        url: server + ""/Procurement/api/ItemReceive/CreateGRN"",
                        dataType: ""json"",
                        processData: false,
                        contentType: 'application/json',
                        type: ""POST"",
                        data: datas,
                        success: function (data) {

                            document.location.relo");
            WriteLiteral(@"ad();
                            alert(""Save Succesfull!"");

                        },
                        error: function () {
                            alert(""There was error saving data!"");
                            arrayItemReceiveDet_VW = [];
                        }
                    }
                );
            }
        }
        
    }

</script>



<div class=""body-content"">
    <div class=""box"">
        ");
            EndContext();
            BeginContext(18938, 1997, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6b5ae28f5ccd4f4294f81feac9872f3c", async() => {
                BeginContext(18944, 568, true);
                WriteLiteral(@"
            <fieldset>
                <legend style=""color:brown"">Issue GRN</legend>

                <div class=""row"">
                    <div class=""col-10"">
                        <label for=""fname"">Receive Date:</label>
                    </div>
                    <div class=""col-23"">
                        <input type=""date"" id=""receiveDate"" />
                    </div>
                    <div class=""col-10"">
                        <label for=""fname"">PO No:</label>
                    </div>
                    <div class=""col-23"">
");
                EndContext();
                BeginContext(19682, 1246, true);
                WriteLiteral(@"                        <input type=""text"" id=""poNumberTxtField"" readonly=""readonly"" placeholder=""Press F8"" onkeydown=""KeyPress()"" />
                    </div>
                    <div class=""col-10"">
                        <label for=""fname"">Vendor Details:</label>
                    </div>
                    <div class=""col-24"">
                        <textarea rows=""4"" cols=""30"" id=""vendorDetailsTxtField"" readonly=""readonly"">

                        </textarea>
                    </div>
                </div>

                <div class=""row"">
                    <div class=""col-10"">
                        <label for=""fname"">PO Date:</label>
                    </div>
                    <div class=""col-23"">
                        <input type=""text"" readonly=""readonly"" id=""poDate"" />
                    </div>
                    <div class=""col-10"">
                        <label for=""fname"">Remarks:</label>
                    </div>
                    <div class=""col-23"">");
                WriteLiteral("\r\n                        <textarea rows=\"4\" cols=\"20\" id=\"remarksTxtField\">\r\n\r\n                        </textarea>\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <br />\r\n        ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(20935, 43, true);
            WriteLiteral("\r\n\r\n        <div class=\"box\">\r\n            ");
            EndContext();
            BeginContext(20978, 2456, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "92a22993b75d4cbda1e642aa47a236a7", async() => {
                BeginContext(20984, 878, true);
                WriteLiteral(@"
                <fieldset>
                    <legend style=""color:brown"">Product/Service Details</legend>

                    <div>
                        <table class=""table-hover"">
                            
                                <thead>
                                    <tr>
                                        <th>SI | </th>
                                        <th>Product/Services Name | </th>
                                        <th>Product/Services Category | </th>
                                        <th>PO Qty | </th>
                                        <th>Received Qty | </th>
                                        <th>Remaining Qty | </th>
                                    </tr>
                                </thead>
                                <tbody id=""productServiceDetailsTable""></tbody>

");
                EndContext();
                BeginContext(23316, 111, true);
                WriteLiteral("\r\n                        </table>\r\n\r\n\r\n                    </div>\r\n\r\n                </fieldset>\r\n            ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(23434, 273, true);
            WriteLiteral(@"
        </div>
    </div>




    <div class=""submitBtn"">
        <button type=""button"" onclick=""NewBtnClick()"" style=""width:100px"">New</button>
        <button type=""button"" onclick=""SubmitBtnClick()"" style=""width:100px"">Submit</button>
    </div>

</div>

");
            EndContext();
            BeginContext(23738, 479, true);
            WriteLiteral(@"<div class=""modal fade"" id=""purchaseOrderPopUp"">
    <div class=""modal-dialog modal-dialog-centered"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h3 class=""text-center text-primary"">Purchase Order List</h3>
                <button type=""button"" class=""close"" data-dismiss=""modal"">&times;</button>
            </div>

            <div class=""modal-body"">
                <div class=""CreateTypeScreen"">
                    ");
            EndContext();
            BeginContext(24217, 2017, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5e7c0c972ff04c538acc467cc3f9e669", async() => {
                BeginContext(24223, 196, true);
                WriteLiteral("\r\n                        <div class=\"form-group\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-23\">\r\n                                    <label>");
                EndContext();
                BeginContext(24452, 1775, true);
                WriteLiteral(@"From Date:</label>
                                </div>
                                <div class=""col-23"">
                                    <input type=""date"" name="""" class=""form-control"" id=""popUpFromDateTxtField"" />
                                </div>
                            </div>
                            <div class=""row"">
                                    <div class=""col-23"">
                                        <label>To Date:</label>
                                    </div>
                                    <div class=""col-23"">
                                        <input type=""date"" name="""" class=""form-control"" id=""popUpToDateTxtField"" />
                                    </div>
                            </div>
                            <div class=""row"">
                                <div class=""submitBtn"">
                                    <button type=""button"" class=""btn btn-success"" onclick=""PreviewBtnClick()"">Preview</button>
                  ");
                WriteLiteral(@"              </div>
                            </div>
                            <br />
                            <table class=""table-hover"">
                                <thead>
                                    <tr>
                                        <th>Purchase Order No | </th>
                                        <th>Order Date | </th>
                                        <th>Supplier Name | </th>
                                        <th>Requisition ID | </th>
                                    </tr>
                                </thead>
                                <tbody id=""tblPurchaseOrders""></tbody>
                            </table>
                        </div>
                    ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(26234, 48, true);
            WriteLiteral("\r\n                </div>\r\n\r\n            </div>\r\n");
            EndContext();
            BeginContext(26476, 38, true);
            WriteLiteral("        </div>\r\n    </div>\r\n</div>\r\n\r\n");
            EndContext();
            BeginContext(26745, 6, true);
            WriteLiteral("\r\n\r\n\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
