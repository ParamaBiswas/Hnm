#pragma checksum "E:\CenterPoint\CenterPointPortal\CenterPointUI\Views\Requisition\NewPurchaseRequisition.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "15f83c999024baf21b45b093539e919b050cfd0c"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Requisition_NewPurchaseRequisition), @"mvc.1.0.view", @"/Views/Requisition/NewPurchaseRequisition.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Requisition/NewPurchaseRequisition.cshtml", typeof(AspNetCore.Views_Requisition_NewPurchaseRequisition))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "E:\CenterPoint\CenterPointPortal\CenterPointUI\Views\_ViewImports.cshtml"
using CenterPointUI;

#line default
#line hidden
#line 2 "E:\CenterPoint\CenterPointPortal\CenterPointUI\Views\_ViewImports.cshtml"
using CenterPointUI.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"15f83c999024baf21b45b093539e919b050cfd0c", @"/Views/Requisition/NewPurchaseRequisition.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"2edc7cc0f3e77f68ee09f57f8aa10aed8980b104", @"/Views/_ViewImports.cshtml")]
    public class Views_Requisition_NewPurchaseRequisition : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Scripts/jquery-2.1.3.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Scripts/jquery.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Scripts/moment.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "1", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "2", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "E:\CenterPoint\CenterPointPortal\CenterPointUI\Views\Requisition\NewPurchaseRequisition.cshtml"
  
    ViewData["Title"] = "NewPurchaseRequisition";

#line default
#line hidden
            BeginContext(60, 97, true);
            WriteLiteral("\r\n<script type=\"text/javascript\" src=\"http://code.jquery.com/jquery-1.7.1.min.js\"></script>\r\n\r\n\r\n");
            EndContext();
            BeginContext(157, 53, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0afb93b6326b4baba252b1148be03f78", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(210, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(212, 47, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "299730253b69487485aa2b01e1942ef7", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(259, 4, true);
            WriteLiteral("\r\n\r\n");
            EndContext();
            BeginContext(263, 43, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ada35700edd84cfeb0c4a358e8cd3ad3", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(306, 40014, true);
            WriteLiteral(@"
<script type=""text/javascript"">

    //Variables for Load Previous Requisition
    var tableName_TBL = """";
    var requisitionID = """";
    var requisitionType = """";
    var requisitionType_VW = """";
    var requisitionTitle = """";
    var requisitionFor = """";
    var requisitionFor_VW = """";
    var requisitionForType = """";
    var requisitionForTypeName_VW = """";
    var remarks = """";
    var requisitionDate = """";
    var reqProductCategory = """";
    var reqProductCategory_VW = """";
    var address = """";
    var isApproved = """";
    var penaltyClause = """";
    var requester = """";
    var requester_VW = """";
    var submissionDeadline = """";
    var warrantyToDate = """";
    var warrantyFromDate = """";
    var maturityTo = """";
    var maturityFrom = """";
    var requisitionCode_PK = """";
    var approvalAction = """";
    var priceLock = """";
    var priceLockName_VW = """";
    var employeeId_VW = """";

    var tableName_TBL = """";
    var productCode = """";
    var productID_VW = """";
    var ");
            WriteLiteral(@"productName_VW = """";
    var requisitionDetCode_PK = """";
    var requisitionCode = """";
    var quantity = """";
    var productType = """";
    var qunatityMOUCode = """";
    var qunatityMOU_VW = """";





    var jList = [];
    var mainList = [];
    var myArray = [];
    var jObj = {};
    var ConditionCode_PK;

    var conditionPositionInArray = 0;

    var arrayPurchaseRequisitionItemList_VW = [];
    var arrayPurchaseReqItemSpecificationList_VW = [];
    var arrayPurchaseRequisitionTermsList_VW = [];


    var mainArray = [];
    var jObj2 = {};

    var ConSLNo = 1;

    var table;
    var row;
    var specrow;
    var i = 0;
    var j = 1;
    var k = 0;
    var start = 0;
    var startProductDetails = 0;
    var included = """";
    var editTermsDescription = """";

    var vArray = new Array();
    var pTcType;
    var pTcValue;
    var pDescription;
    var pCertificateNumber;
    var pExpiryDate;
    var pIssueDate;
    var pRemarks;
    var server = ""http://192.16");
            WriteLiteral(@"8.20.152"";
    var requestUrl;

    var pUserCode = """";
    var pCompanyCode = 1;

    window.onload = function () {
        CheckUserIsLogedIn();
        
    }

    function CheckUserIsLogedIn() {
        debugger
        GetCookie();

        if (pUserCode != ""NotLogedIn"") {
            getRequisitionData();
            LoadRequisitionData();
            getCurrentDate();
            RequisitionTypeDropDown();
            DepartmentDropDown();
            ServiceTypeDropDown();
            RequesterDropDown();
            TcTypeDropDown();
            categoryDropDownList();
            unitDropDownList();
            productNameDropDownList();
        //LoadItemCodeByDropDown();
        }
        else {
            requestUrl = server + ""/centerpoint/requisition/newPurchaseRequisition"";
            Cookies.set('RequestURL', requestUrl, { expires: 1 });
            window.location.href = ""../Login/LoginPageUI"";
        }
    }

    function GetCookie() {
        debugge");
            WriteLiteral(@"r
        pUserCode = Cookies.get('UserID');

        if (pUserCode == null || pUserCode == """") {
            // do cookie doesn't exist stuff;
            pUserCode = ""NotLogedIn"";
        }
        else {
            // do cookie exists stuff
            pUserCode = Cookies.get('UserID');
        }
    }

    function getRequisitionData() {
        debugger
        var rData = document.getElementById(""RequisitionIdTxtField"").value;
        

        $.ajax({
            //url: server + ""/Procurement/api/PurchaseRequsition/GetRequisitionByCode?requisitionCode=''d2884512-5c6e-4ceb-b9e0-5ac03d927068"",
            url: server + ""/Procurement/api/PurchaseRequsition/GetRequisitionByCode?requisitionCode="" + rData,
            type: ""Get"",
            datatype: ""json"",
            contentType: ""application/json"",
            data: { get_param: 'value' },
            crossDomain: ""true"",

            error: function () {
                alert("" An error occurred."");
            },
     ");
            WriteLiteral(@"       success: function (data) {
                //alert(data.purchaseRequisitions);
                //rData = data.purchaseRequisitions.requisitionID;
                //alert(rData);
                debugger
                tableName_TBL = data.purchaseRequisitions.TableName_TBL;
                requisitionID = data.purchaseRequisitions.RequisitionID;
                requisitionType = data.purchaseRequisitions.RequisitionType;
                requisitionType_VW = data.purchaseRequisitions.RequisitionType_VW;
                requisitionTitle = data.purchaseRequisitions.RequisitionTitle;
                requisitionFor = data.purchaseRequisitions.RequisitionFor;
                requisitionFor_VW = data.purchaseRequisitions.RequisitionFor_VW;
                requisitionForType = data.purchaseRequisitions.RequisitionForType;
                requisitionForTypeName_VW = data.purchaseRequisitions.RequisitionForTypeName_VW;
                remarks = data.purchaseRequisitions.Remarks;
                r");
            WriteLiteral(@"equisitionDate = data.purchaseRequisitions.RequisitionDate;
                reqProductCategory = data.purchaseRequisitions.ReqProductCategory;
                reqProductCategory_VW = data.purchaseRequisitions.ReqProductCategory_VW;
                address = data.purchaseRequisitions.Address;
                isApproved = data.purchaseRequisitions.IsApproved;
                penaltyClause = data.purchaseRequisitions.PenaltyClause;
                requester = data.purchaseRequisitions.Requester;
                requester_VW = data.purchaseRequisitions.Requester_VW;
                submissionDeadline = data.purchaseRequisitions.SubmissionDeadline;
                warrantyToDate = data.purchaseRequisitions.WarrantyToDate;
                warrantyFromDate = data.purchaseRequisitions.WarrantyFromDate;
                maturityTo = data.purchaseRequisitions.MaturityTo;
                maturityFrom = data.purchaseRequisitions.MaturityFrom;
                requisitionCode_PK = data.purchaseRequisitions.Requ");
            WriteLiteral(@"isitionCode_PK;
                approvalAction = data.purchaseRequisitions.ApprovalAction;
                priceLock = data.purchaseRequisitions.PriceLock;
                priceLockName_VW = data.purchaseRequisitions.PriceLockName_VW;
                employeeId_VW = data.purchaseRequisitions.EmployeeId_VW;

                LoadRequisitionData();

                debugger
                
                for (var i = 0; i<data.purchaseRequisitions.PurchaseRequisitionItemList_VW.length; i++) {
                    var jObjPurchaseRequisitionItemList_VW = {
                        ""TableName_TBL"": """",
                        ""ProductCode"": """",
                        ""ProductID_VW"": """",
                        ""ProductName_VW"": """",
                        ""RequisitionCode"": """",
                        ""RequisitionDetCode_PK"": """",
                        ""RequisitionCode"": """",
                        ""Quantity"": """",
                        ""ProductType"": """",
                        ""ProductCat");
            WriteLiteral(@"agory_VW"": """",
                        ""QunatityMOUCode"": """",
                        ""QunatityMOU_VW"": """",
                        ""PurchaseReqItemSpecificationList_VW"": [
                            {
                                ""TableName_TBL"": """",
                                ""ProductSpecification"": """",
                                ""SpecificationCode_PK"": """",
                                ""RequisitionDetCode"": """",
                                ""IsNew"": """",
                                ""IsDeleted"": """",
                                ""UserCode"": """",
                                ""ActionType"": """",
                                ""ActionDate"": """",
                                ""CompanyCode_FK"": """",
                                ""IsDirty"": """"
                            }],
                    };

                    jObjPurchaseRequisitionItemList_VW.TableName_TBL = data.purchaseRequisitions.PurchaseRequisitionItemList_VW[i].TableName_TBL;
                    jObjPurchaseRequisitio");
            WriteLiteral(@"nItemList_VW.ProductCode = data.purchaseRequisitions.PurchaseRequisitionItemList_VW[i].ProductCode;
                    jObjPurchaseRequisitionItemList_VW.ProductID_VW = data.purchaseRequisitions.PurchaseRequisitionItemList_VW[i].ProductID_VW;
                    jObjPurchaseRequisitionItemList_VW.ProductName_VW = data.purchaseRequisitions.PurchaseRequisitionItemList_VW[i].ProductName_VW;
                    jObjPurchaseRequisitionItemList_VW.RequisitionDetCode_PK = data.purchaseRequisitions.PurchaseRequisitionItemList_VW[i].RequisitionDetCode_PK;
                    jObjPurchaseRequisitionItemList_VW.RequisitionCode = data.purchaseRequisitions.PurchaseRequisitionItemList_VW[i].RequisitionCode;
                    jObjPurchaseRequisitionItemList_VW.Quantity = data.purchaseRequisitions.PurchaseRequisitionItemList_VW[i].Quantity;
                    jObjPurchaseRequisitionItemList_VW.ProductType = data.purchaseRequisitions.PurchaseRequisitionItemList_VW[i].ProductType;
                    jObjPurchaseRequisitio");
            WriteLiteral(@"nItemList_VW.ProductCatagory_VW = data.purchaseRequisitions.PurchaseRequisitionItemList_VW[i].ProductCatagory_VW;
                    jObjPurchaseRequisitionItemList_VW.QunatityMOUCode = data.purchaseRequisitions.PurchaseRequisitionItemList_VW[i].QunatityMOUCode;
                    jObjPurchaseRequisitionItemList_VW.QunatityMOU_VW = data.purchaseRequisitions.PurchaseRequisitionItemList_VW[i].QunatityMOU_VW;
                    jObjPurchaseRequisitionItemList_VW.PurchaseReqItemSpecificationList_VW = arrayPurchaseReqItemSpecificationList_VW;
                    jObjPurchaseRequisitionItemList_VW.PurchaseRequisitionTermsList_VW = arrayPurchaseRequisitionTermsList_VW;

                    for (var j = 0; j < data.purchaseRequisitions.PurchaseRequisitionItemList_VW[i].PurchaseReqItemSpecificationList_VW.length; j++) {
                        
                        var jObjPurchaseReqItemSpecificationList_VW = {
                            ""TableName_TBL"": """",
                            ""ProductSpecifica");
            WriteLiteral(@"tion"": """",
                            ""SpecificationCode_PK"": """",
                            ""RequisitionDetCode"": """",
                            ""IsNew"": """",
                            ""IsDeleted"": """",
                            ""UserCode"": """",
                            ""ActionType"": """",
                            ""ActionDate"": """",
                            ""CompanyCode_FK"": """",
                            ""IsDirty"": """"
                        };
                        debugger
                        jObjPurchaseReqItemSpecificationList_VW.ProductSpecification = data.purchaseRequisitions.PurchaseRequisitionItemList_VW[i].PurchaseReqItemSpecificationList_VW[j].ProductSpecification;
                        jObjPurchaseReqItemSpecificationList_VW.SpecificationCode_PK = """";
                        jObjPurchaseReqItemSpecificationList_VW.RequisitionDetCode = """";

                        arrayPurchaseReqItemSpecificationList_VW.push(jObjPurchaseReqItemSpecificationList_VW);
                    ");
            WriteLiteral(@"    
                    }
                    AddToTable(jObjPurchaseRequisitionItemList_VW);
                    
                    arrayPurchaseReqItemSpecificationList_VW = [];
                }
                
                for (var i = 0; i < data.purchaseRequisitions.PurchaseRequisitionTermsList_VW.length; i++) {
                    var jObjPurchaseRequisitionTermsList_VW = {
                        ""TableName_TBL"": """",
                        ""Remarks"": """",
                        ""ConditionCode_PK"": """",
                        ""Condition_VW"": """",
                        ""ConSLNo"": """",
                        ""RequisitionCode"": """",
                        ""IsNew"": """",
                        ""IsDeleted"": """",
                        ""UserCode"": """",
                        ""ActionType"": """",
                        ""ActionDate"": """",
                        ""CompanyCode_FK"": """",
                        ""IsDirty"": """"
                    }
                    debugger
                    va");
            WriteLiteral(@"r index = $(""#tblDocuments"").children(""tr"").length;
                    jObjPurchaseRequisitionTermsList_VW.ConditionCode_PK = data.purchaseRequisitions.PurchaseRequisitionTermsList_VW[i].ConditionCode_PK;
                    jObjPurchaseRequisitionTermsList_VW.Condition_VW = data.purchaseRequisitions.PurchaseRequisitionTermsList_VW[i].Condition_VW;
                    jObjPurchaseRequisitionTermsList_VW.ConSLNo = data.purchaseRequisitions.PurchaseRequisitionTermsList_VW[i].ConSLNo;

                    jObjPurchaseRequisitionTermsList_VW.RequisitionCode = data.purchaseRequisitions.PurchaseRequisitionTermsList_VW[i].RequisitionCode;
                    jObjPurchaseRequisitionTermsList_VW.Remarks = data.purchaseRequisitions.PurchaseRequisitionTermsList_VW[i].Remarks;

                    arrayPurchaseRequisitionTermsList_VW.push(jObjPurchaseRequisitionTermsList_VW);

                    AddDocuments(index, jObjPurchaseRequisitionTermsList_VW.ConditionCode_PK, jObjPurchaseRequisitionTermsList_VW.Condi");
            WriteLiteral(@"tion_VW, jObjPurchaseRequisitionTermsList_VW.Remarks);
                    arrayPurchaseRequisitionTermsList_VW = [];
                }
            },
            error: function () {
                alert(""Failed to load Requisition Data"");

            }
        });

    }

    function LoadRequisitionData() {

        if (requisitionID != """") {
            debugger
            document.getElementById(""RequisitionIdTxtField"").value = requisitionID;
            document.getElementById(""ResuisitionTitleTxtField"").value = requisitionTitle;

            //set the HTML coded drop down selected value
            $(""#requisitionTypeDropDownList"").get(0).selectedIndex = requisitionType;

            //set the C# coded drop down selected value
            $(""#departmentDropDownList"").val(requisitionFor).change();
            $(""#serviceTypeDropDownList"").val(reqProductCategory).change();
            $(""#requesterDropDownList"").val(requester).change();
            
            


       ");
            WriteLiteral(@" }
    }



    function backPage() {

        window.location.href = ""../Home/Index"";
    }

    function RequisitionTypeDropDown() {

        $.ajax({
            url: server + ""/Procurement/api/StaticList/StaticList?pDropDownCode=94"",
            type: ""Get"",
            datatype: ""JSON"",
            contentType: ""application/json"",
            crossDomain: ""true"",

            error: function () {
                alert("" An error occurred."");
            },
            success: function (data) {
                for (var i = 0; i < data.staticDropDownList.length; i++) {
                    $(""#requisitionTypeDropDownList"").get(0).options[i] = new Option(data.staticDropDownList[i].ItemText,
                        data.staticDropDownList[i].ItemValue, i);

                }

            },
            error: function () {
                alert(""Failed to load Requisition Type"");

            }
        });

    }

    function DepartmentDropDown() {
        debugger
  ");
            WriteLiteral(@"      $.ajax({
            url: server + ""/CoreCommon/api/Common/GetCodeFile?FileTypeCode=10&LevelCode=189&COMPANY_CODE="" + pCompanyCode,
            type: ""Get"",
            datatype: ""JSON"",
            contentType: ""application/json"",
            crossDomain: ""true"",

            error: function () {
                alert("" An error occurred."");
            },
            success: function (data) {

                for (var i = 0; i < data.listGeneralCodeFile.length; i++) {

                    $(""#departmentDropDownList"").get(0).options[i] = new Option(data.listGeneralCodeFile[i].fileName, data.listGeneralCodeFile[i].fileCode_PK, i);

                }

            },
            error: function () {
                alert(""Failed to load Department"");

            }
        });

    }

    function ServiceTypeDropDown() {

        $.ajax({
            url: server + ""/CoreCommon/api/Common/GetCodeFile?FileTypeCode=223&LevelCode=200&COMPANY_CODE="" + pCompanyCode,
            t");
            WriteLiteral(@"ype: ""Get"",
            datatype: ""JSON"",
            contentType: ""application/json"",
            crossDomain: ""true"",

            error: function () {
                alert("" An error occurred."");
            },
            success: function (data) {
                for (var i = 0; i < data.listGeneralCodeFile.length; i++) {
                    $(""#serviceTypeDropDownList"").get(0).options[i] = new Option(data.listGeneralCodeFile[i].fileName, data.listGeneralCodeFile[i].fileCode_PK, i);

                }

            },
            error: function () {
                alert(""Failed to load Service Type"");

            }
        });

    }

    function RequesterDropDown() {

        $.ajax({
            url: server + ""/CoreCommon/api/Employee/GetEmployeeAll"",
            type: ""Get"",
            datatype: ""JSON"",
            contentType: ""application/json"",
            crossDomain: ""true"",

            error: function () {
                alert("" An error occurred."");
    ");
            WriteLiteral(@"        },
            success: function (data) {
                for (var i = 0; i < data.objEmployeeList.length; i++) {
                    $(""#requesterDropDownList"").get(0).options[i] = new Option(data.objEmployeeList[i].name, data.objEmployeeList[i].employeeCode_PK, i);

                }

            },
            error: function () {
                alert(""Failed to load Requisition Type"");

            }
        });

    }

    function TcTypeDropDown() {

        $.ajax({
            url: server + ""/Procurement/api/TermAndCondition/GetTermsAndCondition"",
            type: ""Get"",
            datatype: ""JSON"",
            contentType: ""application/json"",
            crossDomain: ""true"",

            error: function () {
                alert("" An error occurred."");
            },
            success: function (data) {
                for (var i = 0; i < data.termsAndConditions.length; i++) {
                    $(""#tcTypeDropDownList"").get(0).options[i] = new Option(data.");
            WriteLiteral(@"termsAndConditions[i].Condition, data.termsAndConditions[i].ConditionCode_PK, i);

                }

            },
            error: function () {
                alert(""Failed to load T/C Type"");

            }
        });

    }

    function categoryDropDownList() {

        $.ajax({
            url: server + ""/CoreCommon/api/Common/GetCodeFile?FileTypeCode=33&LevelCode=143&COMPANY_CODE="" + pCompanyCode,
            type: ""Get"",
            datatype: ""JSON"",
            contentType: ""application/json"",
            crossDomain: ""true"",

            error: function () {
                alert("" An error occurred."");
            },
            success: function (data) {
                for (var i = 0; i < data.listGeneralCodeFile.length; i++) {
                    $(""#categoryDropDownList"").get(0).options[i] = new Option(data.listGeneralCodeFile[i].fileName, data.listGeneralCodeFile[i].fileCode_PK, i);

                }

            },
            error: function () {
     ");
            WriteLiteral(@"           alert(""Failed to load Category"");

            }
        });

    }

    function unitDropDownList() {

        $.ajax({
            url: server + ""/CoreCommon/api/Common/GetCodeFile?FileTypeCode=201&LevelCode=178&COMPANY_CODE="" + pCompanyCode,
            type: ""Get"",
            datatype: ""JSON"",
            contentType: ""application/json"",
            crossDomain: ""true"",

            error: function () {
                alert("" An error occurred."");
            },
            success: function (data) {
                for (var i = 0; i < data.listGeneralCodeFile.length; i++) {
                    $(""#unitDropDownList"").get(0).options[i] = new Option(data.listGeneralCodeFile[i].fileName, data.listGeneralCodeFile[i].fileCode_PK, i);

                }

            },
            error: function () {
                alert(""Failed to load Units"");

            }
        });

    }

    function productNameDropDownList() {

        $.ajax({
            url: serve");
            WriteLiteral(@"r + ""/Procurement/api/Product/GetProductsList"",
            type: ""Get"",
            datatype: ""JSON"",
            contentType: ""application/json"",
            crossDomain: ""true"",

            error: function () {
                alert("" An error occurred."");
            },
            success: function (data) {
                
                for (var i = 0; i < data.vList.length; i++) {
                    $(""#productNameDropDownList"").get(0).options[i] = new Option(data.vList[i].ProductName, data.vList[i].ProductCode_PK, data.vList[i].ProductID, i);
                    productID = data.vList[i].ProductID;
                }

            },
            error: function () {
                alert(""Failed to load Products"");

            }
        });

    }

    function DynamicRow() {
        debugger;
        table = document.getElementById(""dynamicRow"");
        row = table.insertRow(i + 1);

        var cell1 = row.insertCell(0);
        var cell2 = row.insertCell(1);
    ");
            WriteLiteral(@"    var cell3 = row.insertCell(2);
        var cell4 = row.insertCell(3);
        var cell5 = row.insertCell(4);
        var cell6 = row.insertCell(5);
        var cell7 = row.insertCell(6);
        debugger
        cell1.innerHTML = '<p id=""CategoryName' + [i] + '""></p>';
        cell2.innerHTML = '<p id=""ItemName' + [i] + '""></p>';
        cell3.innerHTML = '<p id=""ItemCode' + [i] + '""></p>';
        //cell4.innerHTML = '<input type=""text"" readonly=""readonly"" id=""SpecificationName' + [i] + '""></p>';
        cell4.innerHTML = '<p id=""SpecificationName' + [i] + '""></p>';
        cell5.innerHTML = '<p id=""PRQTY' + [i] + '""></p>';
        cell6.innerHTML = '<p id=""Unit' + [i] + '""></p>';
        cell7.innerHTML = '<button type=""button"" class=""btn-add"" onclick=""RemoveBox(this)"" style=""width:100px"">Remove</button></td>';

    }

    function RemoveBox(row) {
        var d = row.parentNode.parentNode.rowIndex;
        document.getElementById('dynamicRow').deleteRow(d);
        //jList.remove(d)");
            WriteLiteral(@";
        i = i - 1;
    }

    function DynamicSpecification() {

        debugger
        var key = event.which || event.keyCode;
        if (key == '13') {
            debugger
            var input = document.createElement(""input"");
            input.type = ""text"";
            input.onkeydown = ""DynamicSpecification()"";
            input.id = ""specTxt"";
            document.getElementById(""specDiv"").appendChild(input);

        }
    }


    function RemoveSpecBox(specrow) {
        var d = specrow.parentNode.parentNode.rowIndex;
        document.getElementById('dynamicRow').deleteRow(d);
        j = j - 1;
    }

    function AddProductDetailsToJson() {
        debugger
        if ($(""#prquantity"").val() == """") {
            alert(""Quantity field can't be empty!"");
        }
        else {
            //Add to the table of Product/Service Details for View in the screen
            jObj = {
                Category: """",
                ItemCode: """",
                Item");
            WriteLiteral(@"Name: """",
                Specification: {

                },
                PRQty: """",
                Unit: """"
            };

            var Category = $(""#categoryDropDownList option:selected"").text();
            jObj.Category = Category;

            var pItemName = $(""#productNameDropDownList option:selected"").text();
            jObj.ItemName = pItemName;
            var pItemCode = $(""#productNameDropDownList option:selected"").val();
            jObj.ItemCode = pItemCode;
            jObj.Specification = myArray;
            jObj.PRQty = $(""#prquantity"").val();


            var pUnit = $(""#unitDropDownList option:selected"").text();
            jObj.Unit = pUnit;
            jList.push(jObj);
            //DynamicRow();
            //AddToTable(jObj);
            myArray = [];
            ////End of the table of Product/Service Details for View in the screen

            debugger
            var jObjPurchaseRequisitionItemList_VW = {
                ""ProductCatagory_VW");
            WriteLiteral(@""": """",
                ""ProductName_VW"": """",
                ""UnitName"": """",
                ""RequisitionDetCode_PK"": """",
                ""RequisitionCode"": """",
                ""ProductCode"": """",
                ""ProductType"": """",
                ""Quantity"": 0,
                ""QunatityMOUCode"": 1,
                ""PurchaseReqItemSpecificationList_VW"": [
                    {
                        ""ProductSpecification"": """",
                        ""SpecificationCode_PK"": """",
                        ""RequisitionDetCode"": """"
                    }]
            };

            jObjPurchaseRequisitionItemList_VW.ProductCatagory_VW = $(""#categoryDropDownList option:selected"").text();
            jObjPurchaseRequisitionItemList_VW.ProductName_VW = $(""#productNameDropDownList option:selected"").text();
            jObjPurchaseRequisitionItemList_VW.UnitName = $(""#unitDropDownList option:selected"").text();
            jObjPurchaseRequisitionItemList_VW.RequisitionDetCode_PK = """";
            jOb");
            WriteLiteral(@"jPurchaseRequisitionItemList_VW.RequisitionCode = """";
            jObjPurchaseRequisitionItemList_VW.ProductCode = $(""#productNameDropDownList option:selected"").val();;
            jObjPurchaseRequisitionItemList_VW.ProductType = $(""#categoryDropDownList option:selected"").val();;
            jObjPurchaseRequisitionItemList_VW.Quantity = $(""#prquantity"").val();
            jObjPurchaseRequisitionItemList_VW.QunatityMOUCode = parseInt($(""#unitDropDownList option:selected"").val(), 10);
            jObjPurchaseRequisitionItemList_VW.PurchaseReqItemSpecificationList_VW = arrayPurchaseReqItemSpecificationList_VW;

            arrayPurchaseRequisitionItemList_VW.push(jObjPurchaseRequisitionItemList_VW);
            AddToTable(jObjPurchaseRequisitionItemList_VW);

            arrayPurchaseReqItemSpecificationList_VW = [];
        }
    }

    function AddToTable(Obj) {
        debugger

        //Uncomment when correct the save/create api
        DynamicRow();
        document.getElementById(""Categ");
            WriteLiteral(@"oryName"" + [i]).innerHTML = Obj.ProductCatagory_VW;
        document.getElementById(""ItemName"" + [i]).innerHTML = Obj.ProductName_VW;
        document.getElementById(""ItemCode"" + [i]).innerHTML = Obj.ProductID_VW;
        for (k = 0; k < Obj.PurchaseReqItemSpecificationList_VW.length; k++) {
            if (Obj.PurchaseReqItemSpecificationList_VW.length > 0) {
                var input = document.createElement(""text"");
                input.type = ""text"";
                input.id = ""SpecificationName"" + [i];
                document.getElementById(""SpecificationName"" + [i]).appendChild(input).innerHTML = "","" + Obj.PurchaseReqItemSpecificationList_VW[k].ProductSpecification;
            }

        }
        document.getElementById(""PRQTY"" + [i]).innerHTML = Obj.Quantity;
        document.getElementById(""Unit"" + [i]).innerHTML = Obj.QunatityMOU_VW;
        i = i + 1;
        
        //DynamicRow();
        //debugger
        //document.getElementById(""CategoryName"" + [i]).innerHTML = Obj.prod");
            WriteLiteral(@"uctCode;
        //document.getElementById(""ItemName"" + [i]).innerHTML = Obj.productName_VW;
        //document.getElementById(""ItemCode"" + [i]).innerHTML = Obj.productID_VW;

        //for (k = 0; k < Obj.purchaseReqItemSpecificationList_VW.length; k++) {
        //    if (Obj.purchaseReqItemSpecificationList_VW.length > 0) {
        //        var input = document.createElement(""text"");
        //        input.type = ""text"";
        //        input.id = ""SpecificationName"" + [i];
        //        document.getElementById(""SpecificationName"" + [i]).appendChild(input).innerHTML = "","" + Obj.purchaseReqItemSpecificationList_VW[k].productSpecification;
        //    }
        //}
        //document.getElementById(""PRQTY"" + [i]).innerHTML = Obj.quantity;
        //document.getElementById(""Unit"" + [i]).innerHTML = Obj.qunatityMOU_VW;
        //i = i + 1;
    }

    function AddMoreSpecification() {
        var key = event.which || event.keyCode;
        if (key == '13') {
            jObj2 = {
");
            WriteLiteral(@"                specName: """"
            };

            var jObjPurchaseReqItemSpecificationList_VW = {
                ""ProductSpecification"": """",
                ""SpecificationCode_PK"": """",
                ""RequisitionDetCode"": """"
            };
            debugger
            jObjPurchaseReqItemSpecificationList_VW.ProductSpecification = $(""#specTxt"").val();
            jObjPurchaseReqItemSpecificationList_VW.SpecificationCode_PK = """";
            jObjPurchaseReqItemSpecificationList_VW.RequisitionDetCode = """";

            arrayPurchaseReqItemSpecificationList_VW.push(jObjPurchaseReqItemSpecificationList_VW);

            jObj2.specName = $(""#specTxt"").val();
            myArray.push(jObj2);
            showSpecificationByEnter();

            document.getElementById(""specTxt"").value = """";
        }

    }


    function AddDocumentstoGrid() {
        debugger
        var isIncluded;
        ConditionCode_PK = $(""#tcTypeDropDownList option:selected"").val();

        if (sta");
            WriteLiteral(@"rt > 0) {
            isIncluded = CheckIsIncluded(arrayPurchaseRequisitionTermsList_VW, ""ConditionCode_PK"", ConditionCode_PK) //arrayPurchaseRequisitionTermsList_VW.includes(""ConditionCode_PK"" + "":"" + ConditionCode_PK);
            start = start + 1;

        }
        else {
            isIncluded = ""false"";
            start = start + 1;
        }

        if (isIncluded == ""false"") {
            debugger
            var jObjPurchaseRequisitionTermsList_VW = {
                ""ConditionCode_PK"": """",
                ""ConSLNo"": 0,
                ""RequisitionCode"": """",
                ""Remarks"": """"
            }

            var index = $(""#tblDocuments"").children(""tr"").length;
            pTcValue = $(""#tcTypeDropDownList option:selected"").val();
            pTcType = $(""#tcTypeDropDownList option:selected"").text();
            pDescription = $(""#desription"").val();


            jObjPurchaseRequisitionTermsList_VW.ConditionCode_PK = $(""#tcTypeDropDownList option:selected"").val();
");
            WriteLiteral(@"            jObjPurchaseRequisitionTermsList_VW.ConSLNo = ConSLNo;
            ConSLNo = ConSLNo + 1;
            jObjPurchaseRequisitionTermsList_VW.RequisitionCode = """";
            jObjPurchaseRequisitionTermsList_VW.Remarks = $(""#desription"").val();

            arrayPurchaseRequisitionTermsList_VW.push(jObjPurchaseRequisitionTermsList_VW);

            AddDocuments(index, pTcValue, pTcType, pDescription);

            document.getElementById(""desription"").value = """";

        }
        else {
            alert(""You have already added the same Condition!"");
            start = start - 1;
        }

    }

    function CheckIsIncluded(arrayName, fieldName, value) {
        for (var i = 0; i < arrayName.length; i++) {
            if (arrayName[i].fieldName === value) {
                //arrayPurchaseRequisitionTermsList_VW.splice(i, 1);
                included = ""true"";
            }
            else {
                included = ""false"";
            }
        }
    }

    fun");
            WriteLiteral(@"ction AddDocuments(index, pTcValue, pTcType, pDescription) {
        debugger
        var SLno = index + 1;
        var indexCell = ""<td style='display:none'><input type='hidden' name='Documents.Index'  value='"" +
            index +
            ""' /></td>"";

        var SLCell = ""<td><input type='hidden'  id='Documents"" +
            index +
            ""_slNo' name='Documents["" +
            index +
            ""].slNo' value='"" +
            SLno +
            ""' />"" +
            SLno +
            ""</td>"";
        var TcTypeCell = ""<td><input type='hidden'   id='Documents"" +
            index +
            ""_pTcType' name='Documents["" +
            index +
            ""].pTcType' value='"" +
            pTcType +
            ""' />"" +
            pTcType +
            ""</td>"";
        var DescriptionCell = ""<td><input type='hidden'  id='Documents"" +
            index +
            ""_pDescription' name='Documents["" +
            index +
            ""].pDescription' value='"" +
 ");
            WriteLiteral(@"           pDescription +
            ""' />"" +
            pDescription +
            ""</td>"";

        //var editCell = ""<td><input  id='btnEditType' class='btn btn-icon btn-danger btn-rounded' type='button' value='Edit' onclick='EditTermsRow("" +
        //    index +
        //    "",\"""" +
        //    pTcValue +
        //    ""\"");' /></td>"";

        var editRemoveCell =
            ""<td><input  id='btnEditType'  class='btn btn-icon btn-danger btn-rounded' type='button' value='Edit'  onclick='EditTermsRow("" +
            index +
            "",\"""" +
            pTcValue +
            ""\"");' />&nbsp&nbsp<input  id='btnRemoveType' class='btn btn-icon btn-danger btn-rounded' type='button' value='Remove' onclick='RemoveTypeRow("" +
            index +
            "",\"""" +
            pTcValue +
            ""\"");' /></td>"";

        var newRow = ""<tr id='tblDocuments"" +
            index +
            ""'>"" +
            indexCell +
            SLCell +
            TcTypeCell +
        ");
            WriteLiteral(@"    DescriptionCell +
            editRemoveCell +
            ""</tr>"";

        $(""#tblDocuments"").append(newRow);
        vArray.push({ DocumentName: pTcType });

    }

    function RemoveTypeRow(id, pTcValue) {
        var controlToBeRemoved = ""#tblDocuments"" + id;
        $(controlToBeRemoved).remove();
        var index = findWithAttr(pTcValue);
        vArray.splice(index, 1);

        debugger
        arrayPurchaseRequisitionTermsList_VW.splice(index, 1);
        start = start - 1;

    }


    function EditTermsRow(id, pTcValue) {
        debugger
        var controlToBeRemoved = ""#tblDocuments"" + id;

        //Remove from the row
        $(controlToBeRemoved).remove();
        var index = findWithAttr(pTcValue);
        vArray.splice(index, 1);

        //Remove from arraylist
        arrayPurchaseRequisitionTermsList_VW.splice(index, 1);
        start = start - 1;

        //assign the values to the drop down and description textbox
        document.getElementBy");
            WriteLiteral(@"Id(""desription"").value = editTermsDescription;


    }

    //To find the index of the ConditionCode_PK from the ArrayList
    function findWithAttr(pTcValue) {

        if (arrayPurchaseRequisitionTermsList_VW.length > 0) {
            for (var i = 0; i < arrayPurchaseRequisitionTermsList_VW.length; i += 1) {
                if (arrayPurchaseRequisitionTermsList_VW[i][""ConditionCode_PK""] === pTcValue) {
                    editTermsDescription = arrayPurchaseRequisitionTermsList_VW[i].Remarks;
                    return i;
                }

            }
        }

        return -1;
    }

    function SubmitBtnClick() {
        debugger

        var jObjMain = {
            ""RequisitionID"": """",
            ""RequisitionType"": 0,
            ""RequisitionTitle"": """",
            ""RequisitionFor"": 0,
            ""RequisitionForType"": 0,
            ""Remarks"": """",
            ""RequisitionDate"": """",
            ""ReqProductCategory"": """",
            ""IsApproved"": 0,
            """);
            WriteLiteral(@"ApprovalAction"": 0,
            ""Requester"": """",
            ""RequisitionCode_PK"": """",
            ""PriceLock"": 0,
            ""CompanyCode_FK"": 0,
            ""ActionType"": """",
            ""UserCode"": """",
            ""ActionDate"": """",
            ""PurchaseRequisitionItemList_VW"": [
                {

                }],
            ""PurchaseRequisitionTermsList_VW"": [
                {

                }]
        };

        jObjMain.RequisitionID = """";
        jObjMain.RequisitionType = parseInt($(""#requisitionTypeDropDownList option:selected"").val(), 10);
        jObjMain.RequisitionTitle = $(""#ResuisitionTitleTxtField"").val();
        jObjMain.RequisitionFor = parseInt($(""#departmentDropDownList option:selected"").val(), 10);
        jObjMain.RequisitionForType = 1;
        jObjMain.Remarks = """";
        var RequisitionDate = new Date($(""#requistionActionDate"").val());
        jObjMain.ReqProductCategory = parseInt($(""#serviceTypeDropDownList option:selected"").val(), 10);
        ");
            WriteLiteral(@"jObjMain.IsApproved = 0;
        jObjMain.ApprovalAction = 0;
        jObjMain.RequisitionCode_PK = """";
        jObjMain.Requester = $(""#requesterDropDownList option:selected"").val();
        jObjMain.PriceLock = parseInt($(""#priceLockDropDownList option:selected"").val(), 10);
        jObjMain.CompanyCode_FK = pCompanyCode;
        jObjMain.ActionType = ""INSERT"";
        jObjMain.UserCode = pUserCode;
        //var ActionDate = new Date($(""#requistionActionDate"").val());

        var dd = RequisitionDate.getDate();
        var mm = RequisitionDate.getMonth() + 1; //January is 0!
        var yyyy = RequisitionDate.getFullYear();

        if (dd < 10) {
            dd = '0' + dd
        }

        if (mm < 10) {
            mm = '0' + mm
        }

        var acDate = dd + '-' + mm + '-' + yyyy;

        //var datestring = (""0"" + ActionDate.getDate()).slice(-2) + ""-"" + (""0"" + (ActionDate.getMonth() + 1)).slice(-2) + ""-"" +
        //    ActionDate.getFullYear() + "" "" + (""0"" + ActionDate");
            WriteLiteral(@".getHours()).slice(-2) + "":"" + (""0"" + ActionDate.getMinutes()).slice(-2);

        jObjMain.ActionDate = $(""#requistionActionDate"").val();
        jObjMain.RequisitionDate = acDate;
        jObjMain.PurchaseRequisitionItemList_VW = arrayPurchaseRequisitionItemList_VW;
        jObjMain.PurchaseRequisitionTermsList_VW = arrayPurchaseRequisitionTermsList_VW;


        debugger

        var datas = JSON.stringify(jObjMain);

        $.ajax(
            {
                url: server + ""/Procurement/api/PurchaseRequsition/CreatePurchaseRequsition"",
                dataType: ""json"",
                processData: false,
                contentType: 'application/json',
                type: ""POST"",
                data: datas,
                success: function (data) {
                    document.location.reload();
                    alert(""Save Succesfull!"");
                },
                error: function () {
                    alert(""There was error saving data!"");
                }");
            WriteLiteral(@"
            }
        );


    }

    function LoadItemCodeByDropDown() {
        debugger
        var itemCode = $(""#productNameDropDownList option:selected"").val();

        $(""#code"").val(itemCode);
    }

    function showSpecificationByEnter() {
        debugger
        //var itemCode = $(""#productNameDropDownList option:selected"").val();
        for (var i = 0; i < myArray.length; i++) {
            var itemCode = myArray[i].specName
        }

        //$(""#prquantity"").val(itemCode);
    }

    function getCurrentDate() {
        var today = new Date();
        var dd = today.getDate();
        var mm = today.getMonth() + 1; //January is 0!
        var yyyy = today.getFullYear();

        if (dd < 10) {
            dd = '0' + dd
        }

        if (mm < 10) {
            mm = '0' + mm
        }

        today = yyyy + '-' + mm + '-' + dd;
        //console.log(today);
        document.getElementById(""requistionActionDate"").value = today;
    }

    functio");
            WriteLiteral("n NewBtnClick() {\r\n        document.location.reload();\r\n    }\r\n\r\n\r\n</script>\r\n");
            EndContext();
            BeginContext(40526, 131, true);
            WriteLiteral("\r\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n<div class=\"body-content\">\r\n    <div class=\"box\">\r\n        ");
            EndContext();
            BeginContext(40657, 3072, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5707d62f9cb54c3e8f67a362f04089b0", async() => {
                BeginContext(40663, 1314, true);
                WriteLiteral(@"
            <fieldset>
                <legend style=""color:brown"">New Purchase Requisition</legend>

                <div class=""row"">
                    <div class=""col-10"">
                        <label for=""fname"">Requisition No:</label>
                    </div>
                    <div class=""col-23"">
                        <input type=""text"" id=""RequisitionIdTxtField"" placeholder=""Auto"" onchange=""getRequisitionData()"" />
                    </div>
                    <div class=""col-10"">
                        <label for=""fname"">Requisition Date:</label>
                    </div>
                    <div class=""col-23"">
                        <input type=""date"" id=""requistionActionDate""  />
                    </div>
                    <div class=""col-10"">
                        <label for=""fname"">Requisition Title:</label>
                    </div>
                    <div class=""col-24"">
                        <input type=""text"" id=""ResuisitionTitleTxtField"" />
     ");
                WriteLiteral(@"               </div>
                </div>

                <div class=""row"">
                    <div class=""col-10"">
                        <label for=""fname"">Requisition Type:</label>
                    </div>
                    <div class=""col-23"">
                        ");
                EndContext();
                BeginContext(41978, 118, false);
#line 1114 "E:\CenterPoint\CenterPointPortal\CenterPointUI\Views\Requisition\NewPurchaseRequisition.cshtml"
                   Write(Html.DropDownList("requisitionTypeDropDownList", new SelectList("", "Value", "Text"), new { @class = "form-control" }));

#line default
#line hidden
                EndContext();
                BeginContext(42096, 230, true);
                WriteLiteral("\r\n                    </div>\r\n                    <div class=\"col-10\">\r\n                        <label for=\"fname\">Department:</label>\r\n                    </div>\r\n                    <div class=\"col-23\">\r\n                        ");
                EndContext();
                BeginContext(42327, 113, false);
#line 1120 "E:\CenterPoint\CenterPointPortal\CenterPointUI\Views\Requisition\NewPurchaseRequisition.cshtml"
                   Write(Html.DropDownList("departmentDropDownList", new SelectList("", "Value", "Text"), new { @class = "form-control" }));

#line default
#line hidden
                EndContext();
                BeginContext(42440, 232, true);
                WriteLiteral("\r\n                    </div>\r\n                    <div class=\"col-10\">\r\n                        <label for=\"fname\">Service Type:</label>\r\n                    </div>\r\n                    <div class=\"col-24\">\r\n                        ");
                EndContext();
                BeginContext(42673, 114, false);
#line 1126 "E:\CenterPoint\CenterPointPortal\CenterPointUI\Views\Requisition\NewPurchaseRequisition.cshtml"
                   Write(Html.DropDownList("serviceTypeDropDownList", new SelectList("", "Value", "Text"), new { @class = "form-control" }));

#line default
#line hidden
                EndContext();
                BeginContext(42787, 356, true);
                WriteLiteral(@"
                    </div>
                </div>

                <div class=""row"">
                    <div class=""col-10"">
                        <label for=""fname"">Price Lock:</label>
                    </div>
                    <div class=""col-23"">
                        <select id=""priceLockDropDownList"">
                            ");
                EndContext();
                BeginContext(43143, 30, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c1a3a55ca9b54399b8b34910544dc66b", async() => {
                    BeginContext(43161, 3, true);
                    WriteLiteral("Yes");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(43173, 30, true);
                WriteLiteral("\r\n                            ");
                EndContext();
                BeginContext(43203, 29, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7a159ad5b4384c0185ac67987016d434", async() => {
                    BeginContext(43221, 2, true);
                    WriteLiteral("No");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_4.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(43232, 264, true);
                WriteLiteral(@"
                        </select>
                    </div>
                    <div class=""col-10"">
                        <label for=""fname"">Requester:</label>
                    </div>
                    <div class=""col-23"">
                        ");
                EndContext();
                BeginContext(43497, 112, false);
#line 1144 "E:\CenterPoint\CenterPointPortal\CenterPointUI\Views\Requisition\NewPurchaseRequisition.cshtml"
                   Write(Html.DropDownList("requesterDropDownList", new SelectList("", "Value", "Text"), new { @class = "form-control" }));

#line default
#line hidden
                EndContext();
                BeginContext(43609, 113, true);
                WriteLiteral("\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n            </fieldset>\r\n            <br />\r\n        ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(43729, 47, true);
            WriteLiteral("\r\n    </div>\r\n\r\n    <div class=\"box\">\r\n        ");
            EndContext();
            BeginContext(43776, 1914, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "2341984f2cc64cdfb3fdc0a5fd7f1431", async() => {
                BeginContext(43782, 740, true);
                WriteLiteral(@"
            <fieldset>
                <legend style=""color:brown"">Product/Service Details</legend>

                <div>
                    <table id=""dynamicRow"" class=""table-hover"">
                        <thead>
                            <tr>
                                <th>Category</th>
                                <th>Item Name</th>
                                <th>Item Code</th>
                                <th>Specification</th>
                                <th>PR Qty</th>
                                <th>Unit</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>");
                EndContext();
                BeginContext(44523, 111, false);
#line 1174 "E:\CenterPoint\CenterPointPortal\CenterPointUI\Views\Requisition\NewPurchaseRequisition.cshtml"
                               Write(Html.DropDownList("categoryDropDownList", new SelectList("", "Value", "Text"), new { @class = "form-control" }));

#line default
#line hidden
                EndContext();
                BeginContext(44634, 43, true);
                WriteLiteral("</td>\r\n                                <td>");
                EndContext();
                BeginContext(44678, 157, false);
#line 1175 "E:\CenterPoint\CenterPointPortal\CenterPointUI\Views\Requisition\NewPurchaseRequisition.cshtml"
                               Write(Html.DropDownList("productNameDropDownList", new SelectList("", "Value", "Text"), new { @class = "form-control", onChange = "LoadItemCodeByDropDown(this)" }));

#line default
#line hidden
                EndContext();
                BeginContext(44835, 405, true);
                WriteLiteral(@"</td>
                                <td><input type=""text"" readonly=""readonly"" id=""code"" /></td>
                                <td><input type=""text"" id=""specTxt"" onkeydown='AddMoreSpecification()' placeholder=""Press Enter to add Spec"" onchange=""showSpecificationByEnter()"" /></td>
                                <td><input type=""text"" id=""prquantity"" /></td>
                                <td>");
                EndContext();
                BeginContext(45241, 107, false);
#line 1179 "E:\CenterPoint\CenterPointPortal\CenterPointUI\Views\Requisition\NewPurchaseRequisition.cshtml"
                               Write(Html.DropDownList("unitDropDownList", new SelectList("", "Value", "Text"), new { @class = "form-control" }));

#line default
#line hidden
                EndContext();
                BeginContext(45348, 335, true);
                WriteLiteral(@"</td>
                                <td><button type=""button"" id=""addjson"" class=""btn-add"" onclick=""AddProductDetailsToJson()"" style=""width:100px"">Add</button></td>

                            </tr>
                        </tbody>

                    </table>


                </div>

            </fieldset>
        ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(45690, 47, true);
            WriteLiteral("\r\n    </div>\r\n\r\n    <div class=\"box\">\r\n        ");
            EndContext();
            BeginContext(45737, 1082, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c8b879592ac7425ea490241402f6c3b4", async() => {
                BeginContext(45743, 333, true);
                WriteLiteral(@"
            <fieldset>
                <legend style=""color:brown"">Terms & Condition</legend>

                <div class=""row"">
                    <div class=""col-10"">
                        <label for=""fname"">T/C Type:</label>
                    </div>
                    <div class=""col-23"">
                        ");
                EndContext();
                BeginContext(46077, 109, false);
#line 1204 "E:\CenterPoint\CenterPointPortal\CenterPointUI\Views\Requisition\NewPurchaseRequisition.cshtml"
                   Write(Html.DropDownList("tcTypeDropDownList", new SelectList("", "Value", "Text"), new { @class = "form-control" }));

#line default
#line hidden
                EndContext();
                BeginContext(46186, 626, true);
                WriteLiteral(@"
                    </div>
                    <div class=""col-10"">
                        <label for=""fname"">Description:</label>
                    </div>
                    <div class=""col-23"">
                        <input type=""text"" id=""desription"" />
                    </div>
                    <div class=""col-10"">

                    </div>
                    <div class=""col-24"">
                        <button type=""button"" id=""addBtn"" onclick=""AddDocumentstoGrid()"" style=""width:100px"">Add</button>
                    </div>
                </div>



            </fieldset>
        ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(46819, 10, true);
            WriteLiteral("\r\n        ");
            EndContext();
            BeginContext(46829, 561, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "3fec7988dead4a2e92c1ecce48641141", async() => {
                BeginContext(46835, 548, true);
                WriteLiteral(@"
            <table class=""table-hover"">
                <thead>
                    <tr class=""HeaderRow"">
                        <th class=""HeaderCell"">SL No</th>
                        <th class=""HeaderCell"">T/C Type</th>
                        <th class=""HeaderCell"">Description</th>
                        <th class=""HeaderCell"">Action</th>
                        <th class=""HeaderCell""></th>
                    </tr>
                </thead>
                <tbody id=""tblDocuments""></tbody>
            </table>

        ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(47390, 269, true);
            WriteLiteral(@"
        
    </div>
    <div class=""submitBtn"">
        <button type=""button"" onclick=""NewBtnClick()"" style=""width:100px"">New</button>
        <button type=""button"" onclick=""SubmitBtnClick()"" style=""width:100px"">Submit</button>
    </div>
    
</div>




");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
