@*<style>
    table, td ,th {
        border: 1px solid black;
    }
</style>*@
<script>

    var ca; var pPk;
    function SplitColumns() {
        
        ca= '@(ViewBag.Columns)';
        ca = ca.split(',');
        pPk = '@(ViewBag.Pk)';
      
    }
    function AssignValue(pID, pValue1, pValue2, pPK) {
        vCalleeVar1 = pPK; //Primary key type=hidden
        vCalleeVar2 = pID;
        vCalleeVar3 = pValue1;
        vCalleeVar4 = pValue2;
            
        AssignValueCommonPopUPNewListUI();
    }
   var pColumns = '@(ViewBag.ColumnNames)';
    var j=0;
    function Preview() {
      
        SplitColumns();
  
        var New = "@(ViewBag.URL)";
        var new1 = New.replace(/&amp;/g, '&');
        
        $.ajax({
            url: new1,
            type: "Get",
            datatype: "JSON",
            contentType: "application/json",
            crossDomain: "true",

            error: function () {
                alert(" An error occurred.");
            },
            success: function (data) {
               
                SetDataForPopup(data);
              
            },
            error: function () {
                alert("Failed to load business Types");

            }
        });
    }
 
    function SetDataForPopup(data) {
        debugger
        var vNewRow;
        var vAllRow = '';
        $('.ListTable').find('tr').not('.HeaderRow').remove();
        var oddEvenClass;
        for (var i = 0; i < data.vList.length; i += 1) {
            var vTextBox4 = '';
            //if (data[i].TextBox4 != undefined && data[i].TextBox4 != null && data[i].TextBox4 != '') {
            //    vTextBox4 = data[i].TextBox4.replace('\'', ' ');
            //}

            if (i % 2 == 0) oddEvenClass = ' class = "DataRowOdd"';
            else oddEvenClass = ' class = "DataRowEven"';
            vNewRow = '<tr' + oddEvenClass + '>' +
                '<td class="DataCell"><a href="#" onclick="javascript:return AssignValue(\'' + data.vList[i][ca[0]] + '\',\'' + data.vList[i][ca[1]] + '\',\'' + data.vList[i][ca[2]] + '\',\'' + data.vList[i][pPk]  + '\')";>' + data.vList[i][ca[0]]+ '</a></td>';
          
                vNewRow += '<td class="DataCell">' + data.vList[i][ca[1]] + '</td>';

         
            vNewRow += '<td class="DataCell">' + data.vList[i][ca[2]] + '</td>';

            vNewRow += '<td class="DataCell" style="display: none">' + data.vList[i][pPk] + '</td>';

           
            '</tr>';
            vAllRow = vAllRow + vNewRow;
        }
        $('.ListTable').find('tr:last').after(vAllRow);
    }
    
</script>
<h3>@ViewBag.Title</h3>



<div class="container">
    <div style="overflow: auto">
        <table id="PopUpTable" class="table table-striped ListTable">
            <tr class="HeaderRow">

                @{ string[] ca = ViewBag.ColumnNames.Split(',');
                    foreach (String de in ca)
                    {

                        <th class="HeaderCell"><b>@de</b></th>
                    }
                }
            </tr>
        </table>
        <button class="btn btn-info"  onclick="Preview();">
            Preview
        </button>
    </div>
</div>
