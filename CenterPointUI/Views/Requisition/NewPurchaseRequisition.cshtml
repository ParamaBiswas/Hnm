
@{
    ViewData["Title"] = "NewPurchaseRequisition";
}

<script type="text/javascript" src="http://code.jquery.com/jquery-1.7.1.min.js"></script>


<script src="~/Scripts/jquery-2.1.3.min.js"></script>
<script src="~/Scripts/jquery.min.js"></script>

<script src="~/Scripts/moment.js"></script>
<script type="text/javascript">

    //Variables for Load Previous Requisition
    var tableName_TBL = "";
    var requisitionID = "";
    var requisitionType = "";
    var requisitionType_VW = "";
    var requisitionTitle = "";
    var requisitionFor = "";
    var requisitionFor_VW = "";
    var requisitionForType = "";
    var requisitionForTypeName_VW = "";
    var remarks = "";
    var requisitionDate = "";
    var reqProductCategory = "";
    var reqProductCategory_VW = "";
    var address = "";
    var isApproved = "";
    var penaltyClause = "";
    var requester = "";
    var requester_VW = "";
    var submissionDeadline = "";
    var warrantyToDate = "";
    var warrantyFromDate = "";
    var maturityTo = "";
    var maturityFrom = "";
    var requisitionCode_PK = "";
    var approvalAction = "";
    var priceLock = "";
    var priceLockName_VW = "";
    var employeeId_VW = "";

    var tableName_TBL = "";
    var productCode = "";
    var productID_VW = "";
    var productName_VW = "";
    var requisitionDetCode_PK = "";
    var requisitionCode = "";
    var quantity = "";
    var productType = "";
    var qunatityMOUCode = "";
    var qunatityMOU_VW = "";





    var jList = [];
    var mainList = [];
    var myArray = [];
    var jObj = {};
    var ConditionCode_PK;

    var conditionPositionInArray = 0;

    var arrayPurchaseRequisitionItemList_VW = [];
    var arrayPurchaseReqItemSpecificationList_VW = [];
    var arrayPurchaseRequisitionTermsList_VW = [];


    var mainArray = [];
    var jObj2 = {};

    var ConSLNo = 1;

    var table;
    var row;
    var specrow;
    var i = 0;
    var j = 1;
    var k = 0;
    var start = 0;
    var startProductDetails = 0;
    var included = "";
    var editTermsDescription = "";

    var vArray = new Array();
    var pTcType;
    var pTcValue;
    var pDescription;
    var pCertificateNumber;
    var pExpiryDate;
    var pIssueDate;
    var pRemarks;
    var server = "http://192.168.20.152";
    var requestUrl;

    var pUserCode = "";
    var pCompanyCode = 1;

    window.onload = function () {
        CheckUserIsLogedIn();
        
    }

    function CheckUserIsLogedIn() {
        debugger
        GetCookie();

        if (pUserCode != "NotLogedIn") {
            getRequisitionData();
            LoadRequisitionData();
            getCurrentDate();
            RequisitionTypeDropDown();
            DepartmentDropDown();
            ServiceTypeDropDown();
            RequesterDropDown();
            TcTypeDropDown();
            categoryDropDownList();
            unitDropDownList();
            productNameDropDownList();
        //LoadItemCodeByDropDown();
        }
        else {
            requestUrl = server + "/centerpoint/requisition/newPurchaseRequisition";
            Cookies.set('RequestURL', requestUrl, { expires: 1 });
            window.location.href = "../Login/LoginPageUI";
        }
    }

    function GetCookie() {
        debugger
        pUserCode = Cookies.get('UserID');

        if (pUserCode == null || pUserCode == "") {
            // do cookie doesn't exist stuff;
            pUserCode = "NotLogedIn";
        }
        else {
            // do cookie exists stuff
            pUserCode = Cookies.get('UserID');
        }
    }

    function getRequisitionData() {
        debugger
        var rData = document.getElementById("RequisitionIdTxtField").value;
        

        $.ajax({
            //url: server + "/Procurement/api/PurchaseRequsition/GetRequisitionByCode?requisitionCode=''d2884512-5c6e-4ceb-b9e0-5ac03d927068",
            url: server + "/Procurement/api/PurchaseRequsition/GetRequisitionByCode?requisitionCode=" + rData,
            type: "Get",
            datatype: "json",
            contentType: "application/json",
            data: { get_param: 'value' },
            crossDomain: "true",

            error: function () {
                alert(" An error occurred.");
            },
            success: function (data) {
                //alert(data.purchaseRequisitions);
                //rData = data.purchaseRequisitions.requisitionID;
                //alert(rData);
                debugger
                tableName_TBL = data.purchaseRequisitions.TableName_TBL;
                requisitionID = data.purchaseRequisitions.RequisitionID;
                requisitionType = data.purchaseRequisitions.RequisitionType;
                requisitionType_VW = data.purchaseRequisitions.RequisitionType_VW;
                requisitionTitle = data.purchaseRequisitions.RequisitionTitle;
                requisitionFor = data.purchaseRequisitions.RequisitionFor;
                requisitionFor_VW = data.purchaseRequisitions.RequisitionFor_VW;
                requisitionForType = data.purchaseRequisitions.RequisitionForType;
                requisitionForTypeName_VW = data.purchaseRequisitions.RequisitionForTypeName_VW;
                remarks = data.purchaseRequisitions.Remarks;
                requisitionDate = data.purchaseRequisitions.RequisitionDate;
                reqProductCategory = data.purchaseRequisitions.ReqProductCategory;
                reqProductCategory_VW = data.purchaseRequisitions.ReqProductCategory_VW;
                address = data.purchaseRequisitions.Address;
                isApproved = data.purchaseRequisitions.IsApproved;
                penaltyClause = data.purchaseRequisitions.PenaltyClause;
                requester = data.purchaseRequisitions.Requester;
                requester_VW = data.purchaseRequisitions.Requester_VW;
                submissionDeadline = data.purchaseRequisitions.SubmissionDeadline;
                warrantyToDate = data.purchaseRequisitions.WarrantyToDate;
                warrantyFromDate = data.purchaseRequisitions.WarrantyFromDate;
                maturityTo = data.purchaseRequisitions.MaturityTo;
                maturityFrom = data.purchaseRequisitions.MaturityFrom;
                requisitionCode_PK = data.purchaseRequisitions.RequisitionCode_PK;
                approvalAction = data.purchaseRequisitions.ApprovalAction;
                priceLock = data.purchaseRequisitions.PriceLock;
                priceLockName_VW = data.purchaseRequisitions.PriceLockName_VW;
                employeeId_VW = data.purchaseRequisitions.EmployeeId_VW;

                LoadRequisitionData();

                debugger
                
                for (var i = 0; i<data.purchaseRequisitions.PurchaseRequisitionItemList_VW.length; i++) {
                    var jObjPurchaseRequisitionItemList_VW = {
                        "TableName_TBL": "",
                        "ProductCode": "",
                        "ProductID_VW": "",
                        "ProductName_VW": "",
                        "RequisitionCode": "",
                        "RequisitionDetCode_PK": "",
                        "RequisitionCode": "",
                        "Quantity": "",
                        "ProductType": "",
                        "ProductCatagory_VW": "",
                        "QunatityMOUCode": "",
                        "QunatityMOU_VW": "",
                        "PurchaseReqItemSpecificationList_VW": [
                            {
                                "TableName_TBL": "",
                                "ProductSpecification": "",
                                "SpecificationCode_PK": "",
                                "RequisitionDetCode": "",
                                "IsNew": "",
                                "IsDeleted": "",
                                "UserCode": "",
                                "ActionType": "",
                                "ActionDate": "",
                                "CompanyCode_FK": "",
                                "IsDirty": ""
                            }],
                    };

                    jObjPurchaseRequisitionItemList_VW.TableName_TBL = data.purchaseRequisitions.PurchaseRequisitionItemList_VW[i].TableName_TBL;
                    jObjPurchaseRequisitionItemList_VW.ProductCode = data.purchaseRequisitions.PurchaseRequisitionItemList_VW[i].ProductCode;
                    jObjPurchaseRequisitionItemList_VW.ProductID_VW = data.purchaseRequisitions.PurchaseRequisitionItemList_VW[i].ProductID_VW;
                    jObjPurchaseRequisitionItemList_VW.ProductName_VW = data.purchaseRequisitions.PurchaseRequisitionItemList_VW[i].ProductName_VW;
                    jObjPurchaseRequisitionItemList_VW.RequisitionDetCode_PK = data.purchaseRequisitions.PurchaseRequisitionItemList_VW[i].RequisitionDetCode_PK;
                    jObjPurchaseRequisitionItemList_VW.RequisitionCode = data.purchaseRequisitions.PurchaseRequisitionItemList_VW[i].RequisitionCode;
                    jObjPurchaseRequisitionItemList_VW.Quantity = data.purchaseRequisitions.PurchaseRequisitionItemList_VW[i].Quantity;
                    jObjPurchaseRequisitionItemList_VW.ProductType = data.purchaseRequisitions.PurchaseRequisitionItemList_VW[i].ProductType;
                    jObjPurchaseRequisitionItemList_VW.ProductCatagory_VW = data.purchaseRequisitions.PurchaseRequisitionItemList_VW[i].ProductCatagory_VW;
                    jObjPurchaseRequisitionItemList_VW.QunatityMOUCode = data.purchaseRequisitions.PurchaseRequisitionItemList_VW[i].QunatityMOUCode;
                    jObjPurchaseRequisitionItemList_VW.QunatityMOU_VW = data.purchaseRequisitions.PurchaseRequisitionItemList_VW[i].QunatityMOU_VW;
                    jObjPurchaseRequisitionItemList_VW.PurchaseReqItemSpecificationList_VW = arrayPurchaseReqItemSpecificationList_VW;
                    jObjPurchaseRequisitionItemList_VW.PurchaseRequisitionTermsList_VW = arrayPurchaseRequisitionTermsList_VW;

                    for (var j = 0; j < data.purchaseRequisitions.PurchaseRequisitionItemList_VW[i].PurchaseReqItemSpecificationList_VW.length; j++) {
                        
                        var jObjPurchaseReqItemSpecificationList_VW = {
                            "TableName_TBL": "",
                            "ProductSpecification": "",
                            "SpecificationCode_PK": "",
                            "RequisitionDetCode": "",
                            "IsNew": "",
                            "IsDeleted": "",
                            "UserCode": "",
                            "ActionType": "",
                            "ActionDate": "",
                            "CompanyCode_FK": "",
                            "IsDirty": ""
                        };
                        debugger
                        jObjPurchaseReqItemSpecificationList_VW.ProductSpecification = data.purchaseRequisitions.PurchaseRequisitionItemList_VW[i].PurchaseReqItemSpecificationList_VW[j].ProductSpecification;
                        jObjPurchaseReqItemSpecificationList_VW.SpecificationCode_PK = "";
                        jObjPurchaseReqItemSpecificationList_VW.RequisitionDetCode = "";

                        arrayPurchaseReqItemSpecificationList_VW.push(jObjPurchaseReqItemSpecificationList_VW);
                        
                    }
                    AddToTable(jObjPurchaseRequisitionItemList_VW);
                    
                    arrayPurchaseReqItemSpecificationList_VW = [];
                }
                
                for (var i = 0; i < data.purchaseRequisitions.PurchaseRequisitionTermsList_VW.length; i++) {
                    var jObjPurchaseRequisitionTermsList_VW = {
                        "TableName_TBL": "",
                        "Remarks": "",
                        "ConditionCode_PK": "",
                        "Condition_VW": "",
                        "ConSLNo": "",
                        "RequisitionCode": "",
                        "IsNew": "",
                        "IsDeleted": "",
                        "UserCode": "",
                        "ActionType": "",
                        "ActionDate": "",
                        "CompanyCode_FK": "",
                        "IsDirty": ""
                    }
                    debugger
                    var index = $("#tblDocuments").children("tr").length;
                    jObjPurchaseRequisitionTermsList_VW.ConditionCode_PK = data.purchaseRequisitions.PurchaseRequisitionTermsList_VW[i].ConditionCode_PK;
                    jObjPurchaseRequisitionTermsList_VW.Condition_VW = data.purchaseRequisitions.PurchaseRequisitionTermsList_VW[i].Condition_VW;
                    jObjPurchaseRequisitionTermsList_VW.ConSLNo = data.purchaseRequisitions.PurchaseRequisitionTermsList_VW[i].ConSLNo;

                    jObjPurchaseRequisitionTermsList_VW.RequisitionCode = data.purchaseRequisitions.PurchaseRequisitionTermsList_VW[i].RequisitionCode;
                    jObjPurchaseRequisitionTermsList_VW.Remarks = data.purchaseRequisitions.PurchaseRequisitionTermsList_VW[i].Remarks;

                    arrayPurchaseRequisitionTermsList_VW.push(jObjPurchaseRequisitionTermsList_VW);

                    AddDocuments(index, jObjPurchaseRequisitionTermsList_VW.ConditionCode_PK, jObjPurchaseRequisitionTermsList_VW.Condition_VW, jObjPurchaseRequisitionTermsList_VW.Remarks);
                    arrayPurchaseRequisitionTermsList_VW = [];
                }
            },
            error: function () {
                alert("Failed to load Requisition Data");

            }
        });

    }

    function LoadRequisitionData() {

        if (requisitionID != "") {
            debugger
            document.getElementById("RequisitionIdTxtField").value = requisitionID;
            document.getElementById("ResuisitionTitleTxtField").value = requisitionTitle;

            //set the HTML coded drop down selected value
            $("#requisitionTypeDropDownList").get(0).selectedIndex = requisitionType;

            //set the C# coded drop down selected value
            $("#departmentDropDownList").val(requisitionFor).change();
            $("#serviceTypeDropDownList").val(reqProductCategory).change();
            $("#requesterDropDownList").val(requester).change();
            
            


        }
    }



    function backPage() {

        window.location.href = "../Home/Index";
    }

    function RequisitionTypeDropDown() {

        $.ajax({
            url: server + "/Procurement/api/StaticList/StaticList?pDropDownCode=94",
            type: "Get",
            datatype: "JSON",
            contentType: "application/json",
            crossDomain: "true",

            error: function () {
                alert(" An error occurred.");
            },
            success: function (data) {
                for (var i = 0; i < data.staticDropDownList.length; i++) {
                    $("#requisitionTypeDropDownList").get(0).options[i] = new Option(data.staticDropDownList[i].ItemText,
                        data.staticDropDownList[i].ItemValue, i);

                }

            },
            error: function () {
                alert("Failed to load Requisition Type");

            }
        });

    }

    function DepartmentDropDown() {
        debugger
        $.ajax({
            url: server + "/CoreCommon/api/Common/GetCodeFile?FileTypeCode=10&LevelCode=189&COMPANY_CODE=" + pCompanyCode,
            type: "Get",
            datatype: "JSON",
            contentType: "application/json",
            crossDomain: "true",

            error: function () {
                alert(" An error occurred.");
            },
            success: function (data) {

                for (var i = 0; i < data.listGeneralCodeFile.length; i++) {

                    $("#departmentDropDownList").get(0).options[i] = new Option(data.listGeneralCodeFile[i].fileName, data.listGeneralCodeFile[i].fileCode_PK, i);

                }

            },
            error: function () {
                alert("Failed to load Department");

            }
        });

    }

    function ServiceTypeDropDown() {

        $.ajax({
            url: server + "/CoreCommon/api/Common/GetCodeFile?FileTypeCode=223&LevelCode=200&COMPANY_CODE=" + pCompanyCode,
            type: "Get",
            datatype: "JSON",
            contentType: "application/json",
            crossDomain: "true",

            error: function () {
                alert(" An error occurred.");
            },
            success: function (data) {
                for (var i = 0; i < data.listGeneralCodeFile.length; i++) {
                    $("#serviceTypeDropDownList").get(0).options[i] = new Option(data.listGeneralCodeFile[i].fileName, data.listGeneralCodeFile[i].fileCode_PK, i);

                }

            },
            error: function () {
                alert("Failed to load Service Type");

            }
        });

    }

    function RequesterDropDown() {

        $.ajax({
            url: server + "/CoreCommon/api/Employee/GetEmployeeAll",
            type: "Get",
            datatype: "JSON",
            contentType: "application/json",
            crossDomain: "true",

            error: function () {
                alert(" An error occurred.");
            },
            success: function (data) {
                for (var i = 0; i < data.objEmployeeList.length; i++) {
                    $("#requesterDropDownList").get(0).options[i] = new Option(data.objEmployeeList[i].name, data.objEmployeeList[i].employeeCode_PK, i);

                }

            },
            error: function () {
                alert("Failed to load Requisition Type");

            }
        });

    }

    function TcTypeDropDown() {

        $.ajax({
            url: server + "/Procurement/api/TermAndCondition/GetTermsAndCondition",
            type: "Get",
            datatype: "JSON",
            contentType: "application/json",
            crossDomain: "true",

            error: function () {
                alert(" An error occurred.");
            },
            success: function (data) {
                for (var i = 0; i < data.termsAndConditions.length; i++) {
                    $("#tcTypeDropDownList").get(0).options[i] = new Option(data.termsAndConditions[i].Condition, data.termsAndConditions[i].ConditionCode_PK, i);

                }

            },
            error: function () {
                alert("Failed to load T/C Type");

            }
        });

    }

    function categoryDropDownList() {

        $.ajax({
            url: server + "/CoreCommon/api/Common/GetCodeFile?FileTypeCode=33&LevelCode=143&COMPANY_CODE=" + pCompanyCode,
            type: "Get",
            datatype: "JSON",
            contentType: "application/json",
            crossDomain: "true",

            error: function () {
                alert(" An error occurred.");
            },
            success: function (data) {
                for (var i = 0; i < data.listGeneralCodeFile.length; i++) {
                    $("#categoryDropDownList").get(0).options[i] = new Option(data.listGeneralCodeFile[i].fileName, data.listGeneralCodeFile[i].fileCode_PK, i);

                }

            },
            error: function () {
                alert("Failed to load Category");

            }
        });

    }

    function unitDropDownList() {

        $.ajax({
            url: server + "/CoreCommon/api/Common/GetCodeFile?FileTypeCode=201&LevelCode=178&COMPANY_CODE=" + pCompanyCode,
            type: "Get",
            datatype: "JSON",
            contentType: "application/json",
            crossDomain: "true",

            error: function () {
                alert(" An error occurred.");
            },
            success: function (data) {
                for (var i = 0; i < data.listGeneralCodeFile.length; i++) {
                    $("#unitDropDownList").get(0).options[i] = new Option(data.listGeneralCodeFile[i].fileName, data.listGeneralCodeFile[i].fileCode_PK, i);

                }

            },
            error: function () {
                alert("Failed to load Units");

            }
        });

    }

    function productNameDropDownList() {

        $.ajax({
            url: server + "/Procurement/api/Product/GetProductsList",
            type: "Get",
            datatype: "JSON",
            contentType: "application/json",
            crossDomain: "true",

            error: function () {
                alert(" An error occurred.");
            },
            success: function (data) {
                
                for (var i = 0; i < data.vList.length; i++) {
                    $("#productNameDropDownList").get(0).options[i] = new Option(data.vList[i].ProductName, data.vList[i].ProductCode_PK, data.vList[i].ProductID, i);
                    productID = data.vList[i].ProductID;
                }

            },
            error: function () {
                alert("Failed to load Products");

            }
        });

    }

    function DynamicRow() {
        debugger;
        table = document.getElementById("dynamicRow");
        row = table.insertRow(i + 1);

        var cell1 = row.insertCell(0);
        var cell2 = row.insertCell(1);
        var cell3 = row.insertCell(2);
        var cell4 = row.insertCell(3);
        var cell5 = row.insertCell(4);
        var cell6 = row.insertCell(5);
        var cell7 = row.insertCell(6);
        debugger
        cell1.innerHTML = '<p id="CategoryName' + [i] + '"></p>';
        cell2.innerHTML = '<p id="ItemName' + [i] + '"></p>';
        cell3.innerHTML = '<p id="ItemCode' + [i] + '"></p>';
        //cell4.innerHTML = '<input type="text" readonly="readonly" id="SpecificationName' + [i] + '"></p>';
        cell4.innerHTML = '<p id="SpecificationName' + [i] + '"></p>';
        cell5.innerHTML = '<p id="PRQTY' + [i] + '"></p>';
        cell6.innerHTML = '<p id="Unit' + [i] + '"></p>';
        cell7.innerHTML = '<button type="button" class="btn-add" onclick="RemoveBox(this)" style="width:100px">Remove</button></td>';

    }

    function RemoveBox(row) {
        var d = row.parentNode.parentNode.rowIndex;
        document.getElementById('dynamicRow').deleteRow(d);
        //jList.remove(d);
        i = i - 1;
    }

    function DynamicSpecification() {

        debugger
        var key = event.which || event.keyCode;
        if (key == '13') {
            debugger
            var input = document.createElement("input");
            input.type = "text";
            input.onkeydown = "DynamicSpecification()";
            input.id = "specTxt";
            document.getElementById("specDiv").appendChild(input);

        }
    }


    function RemoveSpecBox(specrow) {
        var d = specrow.parentNode.parentNode.rowIndex;
        document.getElementById('dynamicRow').deleteRow(d);
        j = j - 1;
    }

    function AddProductDetailsToJson() {
        debugger
        if ($("#prquantity").val() == "") {
            alert("Quantity field can't be empty!");
        }
        else {
            //Add to the table of Product/Service Details for View in the screen
            jObj = {
                Category: "",
                ItemCode: "",
                ItemName: "",
                Specification: {

                },
                PRQty: "",
                Unit: ""
            };

            var Category = $("#categoryDropDownList option:selected").text();
            jObj.Category = Category;

            var pItemName = $("#productNameDropDownList option:selected").text();
            jObj.ItemName = pItemName;
            var pItemCode = $("#productNameDropDownList option:selected").val();
            jObj.ItemCode = pItemCode;
            jObj.Specification = myArray;
            jObj.PRQty = $("#prquantity").val();


            var pUnit = $("#unitDropDownList option:selected").text();
            jObj.Unit = pUnit;
            jList.push(jObj);
            //DynamicRow();
            //AddToTable(jObj);
            myArray = [];
            ////End of the table of Product/Service Details for View in the screen

            debugger
            var jObjPurchaseRequisitionItemList_VW = {
                "ProductCatagory_VW": "",
                "ProductName_VW": "",
                "UnitName": "",
                "RequisitionDetCode_PK": "",
                "RequisitionCode": "",
                "ProductCode": "",
                "ProductType": "",
                "Quantity": 0,
                "QunatityMOUCode": 1,
                "PurchaseReqItemSpecificationList_VW": [
                    {
                        "ProductSpecification": "",
                        "SpecificationCode_PK": "",
                        "RequisitionDetCode": ""
                    }]
            };

            jObjPurchaseRequisitionItemList_VW.ProductCatagory_VW = $("#categoryDropDownList option:selected").text();
            jObjPurchaseRequisitionItemList_VW.ProductName_VW = $("#productNameDropDownList option:selected").text();
            jObjPurchaseRequisitionItemList_VW.UnitName = $("#unitDropDownList option:selected").text();
            jObjPurchaseRequisitionItemList_VW.RequisitionDetCode_PK = "";
            jObjPurchaseRequisitionItemList_VW.RequisitionCode = "";
            jObjPurchaseRequisitionItemList_VW.ProductCode = $("#productNameDropDownList option:selected").val();;
            jObjPurchaseRequisitionItemList_VW.ProductType = $("#categoryDropDownList option:selected").val();;
            jObjPurchaseRequisitionItemList_VW.Quantity = $("#prquantity").val();
            jObjPurchaseRequisitionItemList_VW.QunatityMOUCode = parseInt($("#unitDropDownList option:selected").val(), 10);
            jObjPurchaseRequisitionItemList_VW.PurchaseReqItemSpecificationList_VW = arrayPurchaseReqItemSpecificationList_VW;

            arrayPurchaseRequisitionItemList_VW.push(jObjPurchaseRequisitionItemList_VW);
            AddToTable(jObjPurchaseRequisitionItemList_VW);

            arrayPurchaseReqItemSpecificationList_VW = [];
        }
    }

    function AddToTable(Obj) {
        debugger

        //Uncomment when correct the save/create api
        DynamicRow();
        document.getElementById("CategoryName" + [i]).innerHTML = Obj.ProductCatagory_VW;
        document.getElementById("ItemName" + [i]).innerHTML = Obj.ProductName_VW;
        document.getElementById("ItemCode" + [i]).innerHTML = Obj.ProductID_VW;
        for (k = 0; k < Obj.PurchaseReqItemSpecificationList_VW.length; k++) {
            if (Obj.PurchaseReqItemSpecificationList_VW.length > 0) {
                var input = document.createElement("text");
                input.type = "text";
                input.id = "SpecificationName" + [i];
                document.getElementById("SpecificationName" + [i]).appendChild(input).innerHTML = "," + Obj.PurchaseReqItemSpecificationList_VW[k].ProductSpecification;
            }

        }
        document.getElementById("PRQTY" + [i]).innerHTML = Obj.Quantity;
        document.getElementById("Unit" + [i]).innerHTML = Obj.QunatityMOU_VW;
        i = i + 1;
        
        //DynamicRow();
        //debugger
        //document.getElementById("CategoryName" + [i]).innerHTML = Obj.productCode;
        //document.getElementById("ItemName" + [i]).innerHTML = Obj.productName_VW;
        //document.getElementById("ItemCode" + [i]).innerHTML = Obj.productID_VW;

        //for (k = 0; k < Obj.purchaseReqItemSpecificationList_VW.length; k++) {
        //    if (Obj.purchaseReqItemSpecificationList_VW.length > 0) {
        //        var input = document.createElement("text");
        //        input.type = "text";
        //        input.id = "SpecificationName" + [i];
        //        document.getElementById("SpecificationName" + [i]).appendChild(input).innerHTML = "," + Obj.purchaseReqItemSpecificationList_VW[k].productSpecification;
        //    }
        //}
        //document.getElementById("PRQTY" + [i]).innerHTML = Obj.quantity;
        //document.getElementById("Unit" + [i]).innerHTML = Obj.qunatityMOU_VW;
        //i = i + 1;
    }

    function AddMoreSpecification() {
        var key = event.which || event.keyCode;
        if (key == '13') {
            jObj2 = {
                specName: ""
            };

            var jObjPurchaseReqItemSpecificationList_VW = {
                "ProductSpecification": "",
                "SpecificationCode_PK": "",
                "RequisitionDetCode": ""
            };
            debugger
            jObjPurchaseReqItemSpecificationList_VW.ProductSpecification = $("#specTxt").val();
            jObjPurchaseReqItemSpecificationList_VW.SpecificationCode_PK = "";
            jObjPurchaseReqItemSpecificationList_VW.RequisitionDetCode = "";

            arrayPurchaseReqItemSpecificationList_VW.push(jObjPurchaseReqItemSpecificationList_VW);

            jObj2.specName = $("#specTxt").val();
            myArray.push(jObj2);
            showSpecificationByEnter();

            document.getElementById("specTxt").value = "";
        }

    }


    function AddDocumentstoGrid() {
        debugger
        var isIncluded;
        ConditionCode_PK = $("#tcTypeDropDownList option:selected").val();

        if (start > 0) {
            isIncluded = CheckIsIncluded(arrayPurchaseRequisitionTermsList_VW, "ConditionCode_PK", ConditionCode_PK) //arrayPurchaseRequisitionTermsList_VW.includes("ConditionCode_PK" + ":" + ConditionCode_PK);
            start = start + 1;

        }
        else {
            isIncluded = "false";
            start = start + 1;
        }

        if (isIncluded == "false") {
            debugger
            var jObjPurchaseRequisitionTermsList_VW = {
                "ConditionCode_PK": "",
                "ConSLNo": 0,
                "RequisitionCode": "",
                "Remarks": ""
            }

            var index = $("#tblDocuments").children("tr").length;
            pTcValue = $("#tcTypeDropDownList option:selected").val();
            pTcType = $("#tcTypeDropDownList option:selected").text();
            pDescription = $("#desription").val();


            jObjPurchaseRequisitionTermsList_VW.ConditionCode_PK = $("#tcTypeDropDownList option:selected").val();
            jObjPurchaseRequisitionTermsList_VW.ConSLNo = ConSLNo;
            ConSLNo = ConSLNo + 1;
            jObjPurchaseRequisitionTermsList_VW.RequisitionCode = "";
            jObjPurchaseRequisitionTermsList_VW.Remarks = $("#desription").val();

            arrayPurchaseRequisitionTermsList_VW.push(jObjPurchaseRequisitionTermsList_VW);

            AddDocuments(index, pTcValue, pTcType, pDescription);

            document.getElementById("desription").value = "";

        }
        else {
            alert("You have already added the same Condition!");
            start = start - 1;
        }

    }

    function CheckIsIncluded(arrayName, fieldName, value) {
        for (var i = 0; i < arrayName.length; i++) {
            if (arrayName[i].fieldName === value) {
                //arrayPurchaseRequisitionTermsList_VW.splice(i, 1);
                included = "true";
            }
            else {
                included = "false";
            }
        }
    }

    function AddDocuments(index, pTcValue, pTcType, pDescription) {
        debugger
        var SLno = index + 1;
        var indexCell = "<td style='display:none'><input type='hidden' name='Documents.Index'  value='" +
            index +
            "' /></td>";

        var SLCell = "<td><input type='hidden'  id='Documents" +
            index +
            "_slNo' name='Documents[" +
            index +
            "].slNo' value='" +
            SLno +
            "' />" +
            SLno +
            "</td>";
        var TcTypeCell = "<td><input type='hidden'   id='Documents" +
            index +
            "_pTcType' name='Documents[" +
            index +
            "].pTcType' value='" +
            pTcType +
            "' />" +
            pTcType +
            "</td>";
        var DescriptionCell = "<td><input type='hidden'  id='Documents" +
            index +
            "_pDescription' name='Documents[" +
            index +
            "].pDescription' value='" +
            pDescription +
            "' />" +
            pDescription +
            "</td>";

        //var editCell = "<td><input  id='btnEditType' class='btn btn-icon btn-danger btn-rounded' type='button' value='Edit' onclick='EditTermsRow(" +
        //    index +
        //    ",\"" +
        //    pTcValue +
        //    "\");' /></td>";

        var editRemoveCell =
            "<td><input  id='btnEditType'  class='btn btn-icon btn-danger btn-rounded' type='button' value='Edit'  onclick='EditTermsRow(" +
            index +
            ",\"" +
            pTcValue +
            "\");' />&nbsp&nbsp<input  id='btnRemoveType' class='btn btn-icon btn-danger btn-rounded' type='button' value='Remove' onclick='RemoveTypeRow(" +
            index +
            ",\"" +
            pTcValue +
            "\");' /></td>";

        var newRow = "<tr id='tblDocuments" +
            index +
            "'>" +
            indexCell +
            SLCell +
            TcTypeCell +
            DescriptionCell +
            editRemoveCell +
            "</tr>";

        $("#tblDocuments").append(newRow);
        vArray.push({ DocumentName: pTcType });

    }

    function RemoveTypeRow(id, pTcValue) {
        var controlToBeRemoved = "#tblDocuments" + id;
        $(controlToBeRemoved).remove();
        var index = findWithAttr(pTcValue);
        vArray.splice(index, 1);

        debugger
        arrayPurchaseRequisitionTermsList_VW.splice(index, 1);
        start = start - 1;

    }


    function EditTermsRow(id, pTcValue) {
        debugger
        var controlToBeRemoved = "#tblDocuments" + id;

        //Remove from the row
        $(controlToBeRemoved).remove();
        var index = findWithAttr(pTcValue);
        vArray.splice(index, 1);

        //Remove from arraylist
        arrayPurchaseRequisitionTermsList_VW.splice(index, 1);
        start = start - 1;

        //assign the values to the drop down and description textbox
        document.getElementById("desription").value = editTermsDescription;


    }

    //To find the index of the ConditionCode_PK from the ArrayList
    function findWithAttr(pTcValue) {

        if (arrayPurchaseRequisitionTermsList_VW.length > 0) {
            for (var i = 0; i < arrayPurchaseRequisitionTermsList_VW.length; i += 1) {
                if (arrayPurchaseRequisitionTermsList_VW[i]["ConditionCode_PK"] === pTcValue) {
                    editTermsDescription = arrayPurchaseRequisitionTermsList_VW[i].Remarks;
                    return i;
                }

            }
        }

        return -1;
    }

    function SubmitBtnClick() {
        debugger

        var jObjMain = {
            "RequisitionID": "",
            "RequisitionType": 0,
            "RequisitionTitle": "",
            "RequisitionFor": 0,
            "RequisitionForType": 0,
            "Remarks": "",
            "RequisitionDate": "",
            "ReqProductCategory": "",
            "IsApproved": 0,
            "ApprovalAction": 0,
            "Requester": "",
            "RequisitionCode_PK": "",
            "PriceLock": 0,
            "CompanyCode_FK": 0,
            "ActionType": "",
            "UserCode": "",
            "ActionDate": "",
            "PurchaseRequisitionItemList_VW": [
                {

                }],
            "PurchaseRequisitionTermsList_VW": [
                {

                }]
        };

        jObjMain.RequisitionID = "";
        jObjMain.RequisitionType = parseInt($("#requisitionTypeDropDownList option:selected").val(), 10);
        jObjMain.RequisitionTitle = $("#ResuisitionTitleTxtField").val();
        jObjMain.RequisitionFor = parseInt($("#departmentDropDownList option:selected").val(), 10);
        jObjMain.RequisitionForType = 1;
        jObjMain.Remarks = "";
        var RequisitionDate = new Date($("#requistionActionDate").val());
        jObjMain.ReqProductCategory = parseInt($("#serviceTypeDropDownList option:selected").val(), 10);
        jObjMain.IsApproved = 0;
        jObjMain.ApprovalAction = 0;
        jObjMain.RequisitionCode_PK = "";
        jObjMain.Requester = $("#requesterDropDownList option:selected").val();
        jObjMain.PriceLock = parseInt($("#priceLockDropDownList option:selected").val(), 10);
        jObjMain.CompanyCode_FK = pCompanyCode;
        jObjMain.ActionType = "INSERT";
        jObjMain.UserCode = pUserCode;
        //var ActionDate = new Date($("#requistionActionDate").val());

        var dd = RequisitionDate.getDate();
        var mm = RequisitionDate.getMonth() + 1; //January is 0!
        var yyyy = RequisitionDate.getFullYear();

        if (dd < 10) {
            dd = '0' + dd
        }

        if (mm < 10) {
            mm = '0' + mm
        }

        var acDate = dd + '-' + mm + '-' + yyyy;

        //var datestring = ("0" + ActionDate.getDate()).slice(-2) + "-" + ("0" + (ActionDate.getMonth() + 1)).slice(-2) + "-" +
        //    ActionDate.getFullYear() + " " + ("0" + ActionDate.getHours()).slice(-2) + ":" + ("0" + ActionDate.getMinutes()).slice(-2);

        jObjMain.ActionDate = $("#requistionActionDate").val();
        jObjMain.RequisitionDate = acDate;
        jObjMain.PurchaseRequisitionItemList_VW = arrayPurchaseRequisitionItemList_VW;
        jObjMain.PurchaseRequisitionTermsList_VW = arrayPurchaseRequisitionTermsList_VW;


        debugger

        var datas = JSON.stringify(jObjMain);

        $.ajax(
            {
                url: server + "/Procurement/api/PurchaseRequsition/CreatePurchaseRequsition",
                dataType: "json",
                processData: false,
                contentType: 'application/json',
                type: "POST",
                data: datas,
                success: function (data) {
                    document.location.reload();
                    alert("Save Succesfull!");
                },
                error: function () {
                    alert("There was error saving data!");
                }
            }
        );


    }

    function LoadItemCodeByDropDown() {
        debugger
        var itemCode = $("#productNameDropDownList option:selected").val();

        $("#code").val(itemCode);
    }

    function showSpecificationByEnter() {
        debugger
        //var itemCode = $("#productNameDropDownList option:selected").val();
        for (var i = 0; i < myArray.length; i++) {
            var itemCode = myArray[i].specName
        }

        //$("#prquantity").val(itemCode);
    }

    function getCurrentDate() {
        var today = new Date();
        var dd = today.getDate();
        var mm = today.getMonth() + 1; //January is 0!
        var yyyy = today.getFullYear();

        if (dd < 10) {
            dd = '0' + dd
        }

        if (mm < 10) {
            mm = '0' + mm
        }

        today = yyyy + '-' + mm + '-' + dd;
        //console.log(today);
        document.getElementById("requistionActionDate").value = today;
    }

    function NewBtnClick() {
        document.location.reload();
    }


</script>
@*<script>

    $(document).ready(function () {
        //document.getElementById("requistionActionDate").value = requisitionDate;
        $('departmentDropDownList').val('392');
    });
</script>*@

<meta name="viewport" content="width=device-width, initial-scale=1">
<div class="body-content">
    <div class="box">
        <form>
            <fieldset>
                <legend style="color:brown">New Purchase Requisition</legend>

                <div class="row">
                    <div class="col-10">
                        <label for="fname">Requisition No:</label>
                    </div>
                    <div class="col-23">
                        <input type="text" id="RequisitionIdTxtField" placeholder="Auto" onchange="getRequisitionData()" />
                    </div>
                    <div class="col-10">
                        <label for="fname">Requisition Date:</label>
                    </div>
                    <div class="col-23">
                        <input type="date" id="requistionActionDate"  />
                    </div>
                    <div class="col-10">
                        <label for="fname">Requisition Title:</label>
                    </div>
                    <div class="col-24">
                        <input type="text" id="ResuisitionTitleTxtField" />
                    </div>
                </div>

                <div class="row">
                    <div class="col-10">
                        <label for="fname">Requisition Type:</label>
                    </div>
                    <div class="col-23">
                        @Html.DropDownList("requisitionTypeDropDownList", new SelectList("", "Value", "Text"), new { @class = "form-control" })
                    </div>
                    <div class="col-10">
                        <label for="fname">Department:</label>
                    </div>
                    <div class="col-23">
                        @Html.DropDownList("departmentDropDownList", new SelectList("", "Value", "Text"), new { @class = "form-control" })
                    </div>
                    <div class="col-10">
                        <label for="fname">Service Type:</label>
                    </div>
                    <div class="col-24">
                        @Html.DropDownList("serviceTypeDropDownList", new SelectList("", "Value", "Text"), new { @class = "form-control" })
                    </div>
                </div>

                <div class="row">
                    <div class="col-10">
                        <label for="fname">Price Lock:</label>
                    </div>
                    <div class="col-23">
                        <select id="priceLockDropDownList">
                            <option value="1">Yes</option>
                            <option value="2">No</option>
                        </select>
                    </div>
                    <div class="col-10">
                        <label for="fname">Requester:</label>
                    </div>
                    <div class="col-23">
                        @Html.DropDownList("requesterDropDownList", new SelectList("", "Value", "Text"), new { @class = "form-control" })
                    </div>

                </div>


            </fieldset>
            <br />
        </form>
    </div>

    <div class="box">
        <form>
            <fieldset>
                <legend style="color:brown">Product/Service Details</legend>

                <div>
                    <table id="dynamicRow" class="table-hover">
                        <thead>
                            <tr>
                                <th>Category</th>
                                <th>Item Name</th>
                                <th>Item Code</th>
                                <th>Specification</th>
                                <th>PR Qty</th>
                                <th>Unit</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>@Html.DropDownList("categoryDropDownList", new SelectList("", "Value", "Text"), new { @class = "form-control" })</td>
                                <td>@Html.DropDownList("productNameDropDownList", new SelectList("", "Value", "Text"), new { @class = "form-control", onChange = "LoadItemCodeByDropDown(this)" })</td>
                                <td><input type="text" readonly="readonly" id="code" /></td>
                                <td><input type="text" id="specTxt" onkeydown='AddMoreSpecification()' placeholder="Press Enter to add Spec" onchange="showSpecificationByEnter()" /></td>
                                <td><input type="text" id="prquantity" /></td>
                                <td>@Html.DropDownList("unitDropDownList", new SelectList("", "Value", "Text"), new { @class = "form-control" })</td>
                                <td><button type="button" id="addjson" class="btn-add" onclick="AddProductDetailsToJson()" style="width:100px">Add</button></td>

                            </tr>
                        </tbody>

                    </table>


                </div>

            </fieldset>
        </form>
    </div>

    <div class="box">
        <form>
            <fieldset>
                <legend style="color:brown">Terms & Condition</legend>

                <div class="row">
                    <div class="col-10">
                        <label for="fname">T/C Type:</label>
                    </div>
                    <div class="col-23">
                        @Html.DropDownList("tcTypeDropDownList", new SelectList("", "Value", "Text"), new { @class = "form-control" })
                    </div>
                    <div class="col-10">
                        <label for="fname">Description:</label>
                    </div>
                    <div class="col-23">
                        <input type="text" id="desription" />
                    </div>
                    <div class="col-10">

                    </div>
                    <div class="col-24">
                        <button type="button" id="addBtn" onclick="AddDocumentstoGrid()" style="width:100px">Add</button>
                    </div>
                </div>



            </fieldset>
        </form>
        <form>
            <table class="table-hover">
                <thead>
                    <tr class="HeaderRow">
                        <th class="HeaderCell">SL No</th>
                        <th class="HeaderCell">T/C Type</th>
                        <th class="HeaderCell">Description</th>
                        <th class="HeaderCell">Action</th>
                        <th class="HeaderCell"></th>
                    </tr>
                </thead>
                <tbody id="tblDocuments"></tbody>
            </table>

        </form>
        
    </div>
    <div class="submitBtn">
        <button type="button" onclick="NewBtnClick()" style="width:100px">New</button>
        <button type="button" onclick="SubmitBtnClick()" style="width:100px">Submit</button>
    </div>
    
</div>




