@{
    ViewData["Title"] = "QuotationRequisition";
}


<script type="text/javascript">

    var objRFPProcessing;
    var purchaseRequisitions;
    var conditionArray = [];

    var Price;
    var VatRate;
    var TotalRate;
    var primaryRowID;

    var SubTotal = 0;
    var VatTotal = 0;
    var GrandTotal = 0;

    var rfpProcessCode;
    var TotalVat;


    var arrayQuotationItemList_VW = [];
    var arrayQuotationConditionList_VW = [];
    var arrayQuotationItemSpecificationList_VW = [];


    var server = "http://192.168.20.29";


    var productTableRowNumber = 0;
    var tcTableRowNumber = 0;


    var jObjMain = {
        "QuotationNo": "",
        "QuotationDate": "",
        "Remarks": "",
        "RFProcessCode": "",
        "SupplierCode": "",
        "IsFinalSelection": "",
        "ApprovalAction": "",
        "IsApproved": "",
        "QuotationCode_PK": "",
        "CompanyCode_FK": "",
        "ActionType": "",
        "UserCode": "",
        "ActionDate": "",
        "QuotationItemList_VW":
            [{
            }],
        "QuotationConditionList_VW":
            [{
            }]
    };




    var vRFProcessCode;

    window.onload = function () {
        vRFProcessCode = '@(ViewBag.RFProcessCode)';
        if (vRFProcessCode != '' && vRFProcessCode != undefined)
        {
            GetRFPProcessingByCode(vRFProcessCode);
        }
        getCurrentDate();
        //rfpIdDropDownList();
      
    }
   

    function rfpIdDropDownList() {

        $.ajax({
            url: server + "/Procurement/api/RFPProcessing/GetRFPProcessingList",
            type: "Get",
            datatype: "JSON",
            contentType: "application/json",
            crossDomain: "true",

            error: function () {
                alert(" An error occurred.");
            },
            success: function (data) {
                for (var i = 0; i < data.vList.length; i++) {
                    $("#rfpIdDropDownList").get(0).options[i] = new Option(data.vList[i].rfProcessId, data.vList[i].rfProcessCode_PK, i);

                }

            },
            error: function () {
                alert("Failed to load RFP ID");

            }
        });

    }

    function getCurrentDate() {
        var today = new Date();
        var dd = today.getDate();
        var mm = today.getMonth() + 1; //January is 0!
        var yyyy = today.getFullYear();

        if (dd < 10) {
            dd = '0' + dd
        }

        if (mm < 10) {
            mm = '0' + mm
        }

        today = yyyy + '-' + mm + '-' + dd;
        //console.log(today);
        document.getElementById("quotationDate").value = today;
    }



    function PopUpBtnClick() {
        debugger
        var vURL = encodeURIComponent(server + "/Procurement/api/RFPProcessing/GetRFPProcessingList");

        var vColHeaderName = 'Process  Id, Status, Requisition Title';
        var vTitle = 'RFP Process PopUp';
        var vColumn = 'RFProcessId,Status_VW,RequisitionTitle_VW';
        var vListName = 'listGeneralCodeFile';
        var vPKValue = 'RFProcessCode_PK';

        callModal("../Product/GetData?pDynColumns=" + vColHeaderName + "&pTitle=" + vTitle + "&pURL=" + vURL + "&pColumns=" + vColumn + "&pListName=" + vListName + "&pPkCode=" + vPKValue);
    }

    //function callModal(vURL, vDATA) {
    //    var vModal = document.getElementById('ModalView');
    //    var vSpan = document.getElementsByClassName("close")[0];

    //    $.ajax({
    //        type: "GET",
    //        url: vURL,
    //        data: vDATA,

    //        dataType: "html",
    //        success: function (data) {
    //            $('#DivNew').html(data);

    //            vModal.style.display = "block";

    //        }

    //    });
    //    vSpan.onclick = function () {
    //        vModal.style.display = "none";
    //    }
    //}

    function AssignValueCommonPopUPNewListUI() {
        document.getElementById("rfpIDTxtField").value = vCalleeVar2;
        //document.getElementById("quotationIdTxtField").value = vCalleeVar2;
        //document.getElementById("priceLockTxtField").value = vCalleeVar3;
        rfpProcessCode = vCalleeVar1;
        GetRFPProcessingByCode(rfpProcessCode);

        var vSpan = document.getElementsByClassName("close")[0];
        vSpan.onclick();
    }

    function GetRFPProcessingByCode(rfpProcessCode) {
        debugger
        var rData = rfpProcessCode;


        $.ajax({

            url: server + "/Procurement/api/RFPProcessing/GetRFProcessingByCode?rFProcessCode=" + rData,
            type: "Get",
            datatype: "json",
            contentType: "application/json",
            data: { get_param: 'value' },
            crossDomain: "true",

            error: function () {
                alert(" An error occurred.");
            },
            success: function (data) {

                debugger

                objRFPProcessing = data.objRFPProcessing;
                purchaseRequisitions = data.purchaseRequisitions;

                AssignData(objRFPProcessing, purchaseRequisitions);

            },
            error: function () {
                alert("Failed to load Requisition Data");

            }
        });
    }

    function AssignData(objRFPProcessing, purchaseRequisitions) {
        document.getElementById("quotationTypeTxtField").value = objRFPProcessing.RequisitionTypeName_VW;
        document.getElementById("priceLockTxtField").value = purchaseRequisitions.PriceLockName_VW;
        AddToProductDetailsTable(purchaseRequisitions);
        AddToConditionTable(purchaseRequisitions);

    }

    function AddToProductDetailsTable(ObjProductDetails) {

        debugger

        for (var i = 0; i < ObjProductDetails.PurchaseRequisitionItemList_VW.length; i++) {
            DynamicRow();
            document.getElementById("CategoryName" + [productTableRowNumber]).innerHTML = ObjProductDetails.PurchaseRequisitionItemList_VW[i].ProductCatagory_VW;
            document.getElementById("ItemName" + [productTableRowNumber]).innerHTML = ObjProductDetails.PurchaseRequisitionItemList_VW[i].ProductName_VW;
            document.getElementById("ItemCode" + [productTableRowNumber]).innerHTML = ObjProductDetails.PurchaseRequisitionItemList_VW[i].ProductID_VW;

            for (var k = 0; k < ObjProductDetails.PurchaseRequisitionItemList_VW[i].PurchaseReqItemSpecificationList_VW.length; k++) {
                if (ObjProductDetails.PurchaseRequisitionItemList_VW[i].PurchaseReqItemSpecificationList_VW.length > 0) {
                    //var input = document.createElement("checkbox");
                    //input.type = "checkbox";
                    //input.id = "SpecificationName" + [productTableRowNumber]+k;
                    //document.getElementById("SpecificationName" + [productTableRowNumber]).appendChild(input).innerHTML = '&nbsp<input type="checkbox" onchange="savePriceFieldData()" id= "SpecificationName'+ [productTableRowNumber]+k+'" name="condition" value="Des' + [tcTableRowNumber] + '" checked/>"&nbsp&nbsp"' + ObjProductDetails.PurchaseRequisitionItemList_VW[i].PurchaseReqItemSpecificationList_VW[k].ProductSpecification+'"</br>';
                    var label = document.createElement('p');
                    var description = document.createTextNode(ObjProductDetails.PurchaseRequisitionItemList_VW[i].PurchaseReqItemSpecificationList_VW[k].ProductSpecification);

                    var checkbox = document.createElement("input");
                    checkbox.type = "checkbox";
                    checkbox.id = "SpecificationName" + [productTableRowNumber] + k;
                    checkbox.value = ObjProductDetails.PurchaseRequisitionItemList_VW[i].PurchaseReqItemSpecificationList_VW[k].ProductSpecification;
                    checkbox.onchange = "savePriceFieldData()";
                    checkbox.onclick = "savePriceFieldData()";
                    checkbox.checked = "savePriceFieldData()";

                    label.appendChild(checkbox);
                    label.appendChild(description);

                    document.getElementById("SpecificationName" + [productTableRowNumber]).appendChild(label); //.innerHTML = '&nbsp<input type="checkbox" onchange="savePriceFieldData()" id= "SpecificationName' + [productTableRowNumber] + k + '" name="condition" value="Des' + [tcTableRowNumber] + '" checked/>"&nbsp&nbsp"' + ObjProductDetails.PurchaseRequisitionItemList_VW[i].PurchaseReqItemSpecificationList_VW[k].ProductSpecification + '"</br>';


                }
            }

            document.getElementById("PRQTY" + [productTableRowNumber]).innerHTML = ObjProductDetails.PurchaseRequisitionItemList_VW[i].Quantity;
            document.getElementById("Unit" + [productTableRowNumber]).innerHTML = ObjProductDetails.PurchaseRequisitionItemList_VW[i].QunatityMOU_VW;
            productTableRowNumber = productTableRowNumber + 1;
        }
    }

    function DynamicRow() {
        debugger;
        table = document.getElementById("dynamicRow");
        row = table.insertRow(productTableRowNumber + 1);

        var cell1 = row.insertCell(0);
        var cell2 = row.insertCell(1);
        var cell3 = row.insertCell(2);
        var cell4 = row.insertCell(3);
        var cell5 = row.insertCell(4);
        var cell6 = row.insertCell(5);
        var cell7 = row.insertCell(6);
        var cell8 = row.insertCell(7);
        var cell9 = row.insertCell(8);
        debugger
        cell1.innerHTML = '<td><p id="CategoryName' + [productTableRowNumber] + '"></p></td>';
        cell2.innerHTML = '<td><p id="ItemName' + [productTableRowNumber] + '"></p></td>';
        cell3.innerHTML = '<td><p id="ItemCode' + [productTableRowNumber] + '"></p></td>';
        cell4.innerHTML = '<td><p id="SpecificationName' + [productTableRowNumber] + '"></p></td>';
        cell5.innerHTML = '<td><p id="PRQTY' + [productTableRowNumber] + '"></p></td>';
        cell6.innerHTML = '<td><p id="Unit' + [productTableRowNumber] + '"></p></td>';
        cell7.innerHTML = '<td><input type="text" id="Price' + [productTableRowNumber] + '" onchange="savePriceFieldData()"/></td>';
        cell8.innerHTML = '<td><input type="text" id="VatRate' + [productTableRowNumber] + '" onchange="savePriceFieldData()"/></td>';
        cell9.innerHTML = '<td><input type="text" id="Total' + [productTableRowNumber] + '" onchange="savePriceFieldData()" readonly="readonly"/></td>';

    }



    function savePriceFieldData() {
        debugger

        var tbl = document.getElementById("dynamicRow");

        if (tbl != null) {
            for (var i = 0; i < tbl.rows.length; i++) {
                for (var j = 0; j < tbl.rows[i].cells.length; j++)
                    tbl.rows[i].cells[j].onchange = function () { getval(this); };
            }
        }
    }
    function getval(cel) {
        debugger

        var rowId = cel.childNodes[0].id;
        if (rowId.includes("Price")) {
            Price = cel.childNodes[0].value;
            //alert(Price);
        }
        else if (rowId.includes("VatRate")) {
            VatRate = cel.childNodes[0].value;
            //alert(VatRate);
        }



        for (var i = 0; i < purchaseRequisitions.PurchaseRequisitionItemList_VW.length; i++) {
            if (rowId.includes("VatRate" + i)) {
                var qty = purchaseRequisitions.PurchaseRequisitionItemList_VW[i].Quantity;

                Totals = qty * Price;

                SubTotal = SubTotal + Totals;
                //alert(Totals);
                //document.getElementById('Total' + i).innerHTML = Totals;
                TotalVat = ((Totals * VatRate) / 100);

                VatTotal = VatTotal + TotalVat;

                var TotalAmountOfAProduct = Totals + TotalVat;

                GrandTotal = GrandTotal + TotalAmountOfAProduct;

                document.getElementById("Total" + [i]).value = TotalAmountOfAProduct;
                document.getElementById("subTotalTxtField").value = SubTotal;
                document.getElementById("vatTxtField").value = VatTotal;
                document.getElementById("grandTotalTxtField").value = GrandTotal;






                //arrayQuotationItemSpecificationList_VW = [];
            }

            //if (rowId.includes("SpecificationName" + i)) {
            //    debugger
            //    var rowId = cel.childNodes[0].id;
            //    for (var j = 0; j < cel.childNodes[i].childNodes.length; j++) {
            //        var rowIds = cel.childNodes[i].childNodes[j].id;




            //        //var isChecked = $("#rowIds").is(":checked");
            //        //if (isChecked) {
            //        //    alert("CheckBox checked." + rowIds);
            //        //} else {
            //        //    alert("CheckBox not checked." + rowIds);
            //        //}
            //        //$(document).on('change', '[type=checkbox]', function () {

            //        //});


            //    }
            //}
        }


        VatRate = cel.childNodes[0].value;
        TotalRate = cel.childNodes[0].value;
        //alert(cel.childNodes[0].value);



    }






    function AddToConditionTable(ObjProductDetails) {

        debugger

        for (var i = 0; i < ObjProductDetails.PurchaseRequisitionTermsList_VW.length; i++) {
            conditionArray.push(ObjProductDetails.PurchaseRequisitionTermsList_VW[i]);
            var cCode = ObjProductDetails.PurchaseRequisitionTermsList_VW[i].ConditionCode_PK;
            DynamicTCtableRow(cCode);

            document.getElementById("SlNo" + [tcTableRowNumber]).innerHTML = ObjProductDetails.PurchaseRequisitionTermsList_VW[i].ConSLNo;
            document.getElementById("TcType" + [tcTableRowNumber]).innerHTML = ObjProductDetails.PurchaseRequisitionTermsList_VW[i].Condition_VW;

            var label = document.createElement(ObjProductDetails.PurchaseRequisitionTermsList_VW[i].Remarks);
            var description = document.createTextNode(ObjProductDetails.PurchaseRequisitionTermsList_VW[i].Remarks);


            var checkbox = document.createElement("input");
            checkbox.type = "checkbox";
            checkbox.id = "Description" + [tcTableRowNumber] + i;
            checkbox.checked = "savePriceFieldData()";
            checkbox.value = ObjProductDetails.PurchaseRequisitionTermsList_VW[i].Remarks;


            label.appendChild(checkbox);
            label.appendChild(description);

            document.getElementById("Description" + [tcTableRowNumber]).appendChild(label);

            //document.getElementById("Description" + [tcTableRowNumber]).innerHTML = '&nbsp<input type="checkbox" name="condition" value="Des' + [tcTableRowNumber] + '" checked/>&nbsp&nbsp' + ObjProductDetails.PurchaseRequisitionTermsList_VW[i].Remarks + '</br>';

            tcTableRowNumber = tcTableRowNumber + 1;




        }
    }

    function DynamicTCtableRow(ConditionCode) {
        debugger;
        table = document.getElementById("dynamicTCtableRow");
        row = table.insertRow(tcTableRowNumber + 1);

        var cell1 = row.insertCell(0);
        var cell2 = row.insertCell(1);
        var cell3 = row.insertCell(2);
        //var cell4 = row.insertCell(3);
        //var cell5 = row.insertCell(4);

        cell1.innerHTML = '<p id="SlNo' + [tcTableRowNumber] + '"></p>';
        cell2.innerHTML = '<p id="TcType' + [tcTableRowNumber] + '"></p>';
        cell3.innerHTML = '<p id="Description' + [tcTableRowNumber] + '"></p>';
        //cell4.innerHTML = '<button type="button" class="btn-add" onclick="EditBox(this)" style="width:100px">Edit</button>';

        //cell5.innerHTML = '<input  id="btnEditType"  class="btn-add" type="button" value="Remove"  onclick="RemoveTypeRow(this,' + tcTableRowNumber + ',\'' + ConditionCode +'\');" />';

    }


    function RemoveTypeRow(row, id, ConditionCode) {
        debugger
        var d = row.parentNode.parentNode.rowIndex;
        document.getElementById('dynamicTCtableRow').deleteRow(d);

        var index = findWithAttr(ConditionCode);

        //Remove from main Array
        debugger
        conditionArray.splice(index, 1);
        tcTableRowNumber = tcTableRowNumber - 1;

    }


    function EditTermsRow(id, pTcValue) {
        debugger

        var controlToBeRemoved = "#tblRowDocuments" + id;

        //Remove from the row
        $(controlToBeRemoved).remove();
        var index = findWithAttr(pTcValue);
        vArray.splice(index, 1);

        //Remove from arraylist
        arrayPurchaseRequisitionTermsList_VW.splice(index, 1);
        start = start - 1;

        //assign the values to the drop down and description textbox
        document.getElementById("desription").value = editTermsDescription;


    }

    //To find the index of the ConditionCode_PK from the ArrayList
    function findWithAttr(ConditionCode) {

        if (conditionArray.length > 0) {
            for (var i = 0; i < conditionArray.length; i += 1) {
                if (conditionArray[i]["ConditionCode_PK"] === ConditionCode) {
                    // editTermsDescription = arrayPurchaseRequisitionTermsList_VW[i].Remarks;
                    return i;
                }

            }
        }

        return -1;
    }

    function SubmitBtnClick() {

        debugger
        var rData = rfpProcessCode;


        $.ajax({

            url: server + "/Procurement/api/RFPProcessing/GetRFProcessingByCode?rFProcessCode=" + rData,
            type: "Get",
            datatype: "json",
            contentType: "application/json",
            data: { get_param: 'value' },
            crossDomain: "true",

            error: function () {
                alert(" An error occurred.");
            },
            success: function (data) {

                debugger

                objRFPProcessing = data.objRFPProcessing;
                purchaseRequisitions = data.purchaseRequisitions;

                SaveData(objRFPProcessing, purchaseRequisitions)

            },
            error: function () {
                alert("Failed to load Requisition Data");

            }
        });
    }

    function SaveData(objRFPProcessing, purchaseRequisitions) {
        debugger


        jObjMain.QuotationNo = "";
        jObjMain.QuotationDate = $("#quotationDate").val();
        jObjMain.Remarks = "";
        jObjMain.RFProcessCode = rfpProcessCode;
        jObjMain.SupplierCode = "2b8af053-3554-4a1f-98fc-147e9842dea7";
        jObjMain.IsFinalSelection = 0;
        jObjMain.ApprovalAction = 0;
        jObjMain.IsApproved = 0;
        jObjMain.QuotationCode_PK = "";
        jObjMain.CompanyCode_FK = 1;
        jObjMain.ActionType = "INSERT";
        jObjMain.UserCode = "9C6CA730-34AB-40B2-A0DC-17CD77330B9E";
        jObjMain.ActionDate = $("#quotationDate").val();

        debugger


        for (var i = 0; i < purchaseRequisitions.PurchaseRequisitionItemList_VW.length; i++) {
            var jObjQuotationItemList_VW =
            {
                "QunatityMOUCode": "",
                "RequisitionCode": "",
                "ProductType": "",
                "Quantity": "",
                "RequisitionDetCode": "",
                "VATRate": "",
                "ProductCode": "",
                "TotalVAT": "",
                "Rate": "",
                "QuotationDetCode_PK": "",
                "QuotationItemSpecificationList_VW": [{

                }]
            };
            jObjQuotationItemList_VW.QunatityMOUCode = purchaseRequisitions.PurchaseRequisitionItemList_VW[i].QunatityMOUCode;
            jObjQuotationItemList_VW.RequisitionCode = purchaseRequisitions.RequisitionCode_PK;
            jObjQuotationItemList_VW.ProductType = purchaseRequisitions.PurchaseRequisitionItemList_VW[i].ProductType;
            jObjQuotationItemList_VW.Quantity = purchaseRequisitions.PurchaseRequisitionItemList_VW[i].Quantity;
            jObjQuotationItemList_VW.RequisitionDetCode = purchaseRequisitions.PurchaseRequisitionItemList_VW[i].RequisitionDetCode_PK;
            jObjQuotationItemList_VW.VATRate = VatRate;
            jObjQuotationItemList_VW.ProductCode = purchaseRequisitions.PurchaseRequisitionItemList_VW[i].ProductCode;
            jObjQuotationItemList_VW.TotalVAT = TotalVat;
            jObjQuotationItemList_VW.Rate = Price;
            jObjQuotationItemList_VW.QuotationDetCode_PK = "";

            for (var k = 0; k < purchaseRequisitions.PurchaseRequisitionItemList_VW[i].PurchaseReqItemSpecificationList_VW.length; k++) {
                if (purchaseRequisitions.PurchaseRequisitionItemList_VW[i].PurchaseReqItemSpecificationList_VW.length > 0) {

                    //alert($("#SpecificationName" + i + k).val());

                    //alert($("#SpecificationName" + i + k).prop("checked"));

                    debugger

                    var isChecked = $("#SpecificationName" + i + k).prop("checked");


                    var jObjQuotationItemSpecificationList_VW = {
                        "SpecificationCode": "",
                        "QuotationDetCode_FK": "",
                        "ProductCode": "",
                        "IsSatisfied": "",
                        "QuotationItemSpecificationCode_PK": ""
                    };

                    jObjQuotationItemSpecificationList_VW.SpecificationCode = purchaseRequisitions.PurchaseRequisitionItemList_VW[i].PurchaseReqItemSpecificationList_VW[k].SpecificationCode_PK;
                    jObjQuotationItemSpecificationList_VW.QuotationDetCode_FK = "";
                    jObjQuotationItemSpecificationList_VW.ProductCode = purchaseRequisitions.PurchaseRequisitionItemList_VW[i].ProductCode;

                    if (isChecked) {
                        jObjQuotationItemSpecificationList_VW.IsSatisfied = 1;
                    }
                    else {
                        jObjQuotationItemSpecificationList_VW.IsSatisfied = 0;
                    }

                    //jObjQuotationItemSpecificationList_VW.IsSatisfied = 1;
                    jObjQuotationItemSpecificationList_VW.QuotationItemSpecificationCode_PK = "";
                    arrayQuotationItemSpecificationList_VW.push(jObjQuotationItemSpecificationList_VW);

                }
            }

            jObjQuotationItemList_VW.QuotationItemSpecificationList_VW = arrayQuotationItemSpecificationList_VW;
            arrayQuotationItemList_VW.push(jObjQuotationItemList_VW);
            arrayQuotationItemSpecificationList_VW = [];
        }

        for (var i = 0; i < purchaseRequisitions.PurchaseRequisitionTermsList_VW.length; i++) {
            var jObjQuotationConditionList_VW =
            {
                "ConSLNo": "",
                "QuotationCode": "",
                "ConditionCode_PK": "",
                "Remarks": "",
                "IsSatisfied": "",
                "ConditionValue": "",
                "AchivedValue": ""
            };

            jObjQuotationConditionList_VW.ConSLNo = purchaseRequisitions.PurchaseRequisitionTermsList_VW[i].ConSLNo;
            jObjQuotationConditionList_VW.QuotationCode = "";
            jObjQuotationConditionList_VW.ConditionCode_PK = purchaseRequisitions.PurchaseRequisitionTermsList_VW[i].ConditionCode_PK;
            jObjQuotationConditionList_VW.Remarks = purchaseRequisitions.PurchaseRequisitionTermsList_VW[i].Remarks;

            debugger

            var isChecked = $("#Description" + i).prop("checked");
            if (isChecked) {
                jObjQuotationConditionList_VW.IsSatisfied = 1;
            }
            else {
                jObjQuotationConditionList_VW.IsSatisfied = 0;
            }


            jObjQuotationConditionList_VW.ConditionValue = 0;
            jObjQuotationConditionList_VW.AchivedValue = 0;
            arrayQuotationConditionList_VW.push(jObjQuotationConditionList_VW);
        }


        jObjMain.QuotationItemList_VW = arrayQuotationItemList_VW;
        jObjMain.QuotationConditionList_VW = arrayQuotationConditionList_VW;

        debugger
        var datas = JSON.stringify(jObjMain);

        $.ajax(
            {

                url: server + "/Procurement/api/Quotation/CreateQuotation",
                dataType: "json",
                processData: false,
                contentType: 'application/json',
                type: "POST",
                data: datas,
                success: function (data) {
                    document.location.reload();
                    alert("Save Succesfull!");
                },
                error: function () {
                    alert("There was error saving data!");
                }
            }
        );
    }


</script>



<div class="body-content">
    <div class="box">
        <form>
            <table>

                <tr>
                    <td width="40">
                        <b>RFP ID:</b>
                    </td>
                    <td>
                        @*@Html.DropDownList("rfpIdDropDownList", new SelectList("", "Value", "Text"), new { @class = "form-control", onChange = "LoadSelectedPrReferenceData(this)" })*@
                        @*<button type="button" id="addBtn" class="btn-add" onclick="PopUpBtnClick()" style="width:100px">Pop Up</button>*@
                        <input type="text" id="rfpIDTxtField" ondblclick="PopUpBtnClick()" readonly="readonly" placeholder="Tap twice" />
                    </td>
                    <td width="40">
                        <b>Quotation Date:</b>

                    </td>
                    <td width="40">
                        <input type="date" id="quotationDate" />
                    </td>
                    <td width="40">
                        <b>Quotation Type:</b>

                    </td>
                    <td>
                        <input type="text" id="quotationTypeTxtField" readonly="readonly" />
                    </td>

                </tr>

                <tr>
                    <td width="40">
                        <b>Quotation ID:</b>

                    </td>
                    <td>
                        <input type="text" id="quotationIdTxtField" readonly="readonly" placeholder="Auto Generate" />
                    </td>
                    <td width="40">
                        <b>Price Lock:</b>

                    </td>
                    <td>
                        <input type="text" id="priceLockTxtField" readonly="readonly" />
                    </td>
                </tr>
            </table>
            <br />
        </form>
    </div>

    <div class="box">

        <form>
            <fieldset>
                <legend style="color:brown">Terms & Condition</legend>
                @*<table class="table table-striped ListTable">
                    <thead>
                        <tr class="HeaderRow">
                            <th class="HeaderCell">SL No</th>
                            <th class="HeaderCell">T/C Type</th>
                            <th class="HeaderCell">Description</th>
                            <th class="HeaderCell"></th>
                        </tr>
                    </thead>
                    <tbody id="tblDocuments"></tbody>
                </table>*@

                <table border="1" id="dynamicTCtableRow">
                    <thead>
                        <tr>
                            <th><center>SL No</center></th>
                            <th><center>T/C Type</center></th>
                            <th><center>Description</center></th>
                            @*<th><center>Action</center></th>*@
                        </tr>
                    </thead>
                    <tbody id="tblRowDocuments"></tbody>
                </table>

            </fieldset>
        </form>
    </div>

        <div class="box">
            <form>
                <fieldset>
                    <legend style="color:brown">Product/Service Details</legend>
                    <div>
                        <table border="1" id="dynamicRow">
                            <tr>
                                <th><center>Category</center></th>
                                <th><center>Item Name</center></th>
                                <th><center>Item Code</center></th>
                                <th><center>Specification</center></th>
                                <th><center>PR Qty</center></th>
                                <th><center>Unit</center></th>
                                <th><center>Price</center></th>
                                <th><center>Vat Rate</center></th>
                                <th><center>Total</center></th>
                            </tr>
                        </table>

                    </div>

                </fieldset>
            </form>
        </div>

        <div class="box">
            <form>
                <fieldset>
                    <table>

                        <tr>
                            <td width="40">
                                <b>Sub-Total:</b>
                            </td>
                            <td>
                                <input type="text" id="subTotalTxtField" readonly="readonly" />
                            </td>
                        </tr>

                        <tr>
                            <td width="40">
                                <b>Vat:</b>
                            </td>
                            <td>
                                <input type="text" id="vatTxtField" readonly="readonly" />
                            </td>
                        </tr>
                        <tr>
                            <td width="40">
                                <b>Grand-Total:</b>
                            </td>
                            <td>
                                <input type="text" id="grandTotalTxtField" readonly="readonly" />
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <button type="button" id="addBtn" class="btn-add" onclick="SubmitBtnClick()" style="width:100px">Submit</button>
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </form>
        </div>
</div>

<div id="ModalView" class="modal">

    <!-- Modal content -->
    <div class="modal-content">
        <div class="modal-header">

            <span class="close">×</span>
        </div>
        <div class="modal-body">
            <div class="modal-body">
                <div id="DivNew">



                </div>

            </div>
        </div>

    </div>

</div>
